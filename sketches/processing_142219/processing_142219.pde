
/*
Konkuk University
 SOS iDesign
 
 Name: KIM Mirae
 ID: 201420064
 
 */
 // Don't worry about understanding the code below!
// You only need to know that you will use the Volume
import ddf.minim.*;

Minim minim;
AudioInput in;
float volume = 0;
float volumeF = 0;

//-------------------------------------
void setupAudio(){
minim = new Minim(this);
in = minim.getLineIn(Minim.MONO, 512);
}

//-------------------------------------
void getVolume(){
volumeF = in.right.level()*1000;
volume = 0.8*volume + 0.8*volumeF; // Sensitivity = standard is 0.2*volumeF
}

//-------------------------------------
void stop(){
in.close();
minim.stop();
super.stop();
}

PImage img;

void setup() {
  size (600, 600);
  setupAudio();
  background(180,280,600);
  // noLoop();
  smooth();
  colorMode (RGB, 600);

}

void draw() {
  println(mouseX + " : " + mouseY);
  background(280,400,600);
  colorMode(RGB,mouseX/(width/600),mouseY/(height/600),600);
  // here you add your code with all shapes and colors. 
  
  //draw a quad
 
  
  //gromit skin
  noStroke();
  fill(500, 380, 250);
  quad (243,383,264,509,304,509,285,386);
  fill(500, 380, 250);
  quad (320,396,343,512,381,508,357,386);
  fill(500, 380, 250);
  quad (295,385,320,396,343,512,357,370);
  fill(500, 380, 250);
  quad (243,383,285,387,295,386,357,370);
  fill(500, 380, 250);
  quad (242,365,243,384,357,371,360,353);
  fill(500, 380, 250);
  quad (250,307,242,366,360,354,363,313);
  fill(500, 380, 250);
  quad (259,256,250,308,363,314,359,272);
  fill(500, 380, 250);
  quad (259,241,259,256,359,273,352,240);
  fill(500, 380, 250);
  quad (259,241,259,256,359,273,352,240);
  fill(500, 380, 250);
  quad (229,300,225,365,244,356,251,305);
  fill(500, 380, 250);
  quad (229,300,210,352,226,365,229,300);
  fill(500, 380, 250);
  quad (229,300,205,338,210,352,229,300);
  fill(500, 380, 250);
  quad (229,300,205,338,210,352,229,300);
  fill(500, 380, 250);
  quad (229,300,203,326,205,338,229,300);
  fill(500, 380, 250);
  quad (229,300,199,317,203,326,229,300);
  fill(500, 380, 250);
  quad (229,300,198,308,199,317,229,300);
  fill(500, 380, 250);
  quad (206,257,198,308,229,300,216,262);
  fill(500, 380, 250);
  quad (206,257,246,222,247,226,213,261);
  fill(500, 380, 250);
  quad (246,222,260,217,247,226,246,222);
  fill(500, 380, 250);
  quad (363,308,371,355,359,352,363,308);
  fill(500, 380, 250);
  quad (363,308,385,365,377,364,370,355);
  fill(500, 380, 250);
  quad (362,308,382,305,406,337,384,365);
  fill(500, 380, 250);
  quad (380,304,397,268,426,268,406,338);
  fill(500, 380, 250);
  quad (397,268,412,246,423,255,426,268);
  fill(500, 380, 250);
  quad (341,212,412,246,406,256,353,224);
  fill(500, 380, 250);
  quad (277,90,260,89,251,104,279,104);
  fill(500, 380, 250);
  quad (276,90,279,104,312,104,296,90);
  fill(500, 380, 250);
  quad (251,104,249,131,287,131,281,102);
  fill(500, 380, 250);
  quad (280,102,286,131,329,134,312,104);
  fill(500, 380, 250);
  quad (249,131,249,163,295,163,287,131);
  fill(500, 380, 250);
  quad (286,130,294,163,339,163,329,133);
  fill(500, 380, 250);
  quad (249,163,248,183,299,183,295,163);
  fill(500, 380, 250);
  quad (294,163,298,183,346,183,339,163);
  fill(500, 380, 250);
  quad (248,183,254,208,298,208,299,183);
  fill(500, 380, 250);
  quad (298,183,297,208,341,208,346,183);
  fill(500, 380, 250);
  quad (298,208,254,208,267,223,298,208);
  fill(500, 380, 250);
  quad (298,208,266,223,287,231,298,208);
  fill(500, 380, 250);
  quad (298,208,286,231,299,232,298,208);
  fill(500, 380, 250);
  quad (298,208,298,232,311,231,298,208);
  fill(500, 380, 250);
  quad (298,208,310,231,323,225,298,208);
  fill(500, 380, 250);
  quad (298,208,322,225,334,218,298,208);
  fill(500, 380, 250);
  quad (298,208,333,219,340,208,298,208);
  fill(500, 380, 250);
  quad (264,508,256,523,309,525,303,508);
  fill(500, 380, 250);
  quad (256,522,233,542,310,542,309,525);
  fill(500, 380, 250);
  quad (233,542,233,552,303,549,310,542);
  fill(500, 380, 250);
  quad (233,552,240,555,250,554,252,550);
  fill(500, 380, 250);
  quad (252,550,256,556,271,556,277,548);
  fill(500, 380, 250);
  quad (277,548,282,555,297,555,302,548);
  fill(500, 380, 250);
  quad (343,510,343,520,387,521,380,506);
  fill(500, 380, 250);
  quad (343,519,325,553,400,553,387,520);
  fill(500, 380, 250);
  quad (325,553,328,560,343,559,350,552);
  fill(500, 380, 250);
  quad (350,552,355,561,370,560,376,551);
  fill(500, 380, 250);
  quad (376,551,382,560,395,559,398,546);
  
  
  //gromit skin shadow
  fill(350,220,190);
  quad(230,272,215,260,229,300,232,272);
  fill(350,220,190);
  quad(215,260,230,272,258,250,259,241);
  fill(350,220,190);
  quad(215,260,259,242,260,216,249,225);
  fill(350,220,190);
  quad(260,216,258,240,270,240,267,223);
  fill(350,220,190);
  quad(267,223,270,240,288,240,286,231);
  fill(350,220,190);
  quad(285,231,287,240,312,240,311,230);
  fill(350,220,190);
  quad(310,230,311,240,352,239,333,218);
  fill(350,220,190);
  quad(333,219,352,240,360,228,339,209);
  fill(350,220,190);
  quad(352,240,397,266,404,255,360,228);
  fill(350,220,190);
  quad(257,248,266,242,285,237,256,234);
  
  //gromit skin shadow-2
  fill(400,270,220);
  quad(258,217,213,259,218,272,262,219);
  fill(400,270,220);
  quad(311,248,329,252,342,264,341,244);
  fill(400,270,220);
  quad(262,250,258,269,266,256,276,248);
  fill(400,270,220);
  quad(213,259,219,301,228,299,223,263);
  fill(400,270,220);
  quad(259,238,258,252,353,246,352,238);
  fill(400,270,220);
  quad(259,250,241,368,245,369,263,248);
  fill(400,270,220);
  quad(241,368,264,507,245,369,241,368);
  fill(400,270,220);
  quad(339,245,352,321,362,307,345,245);
  fill(400,270,220);
  quad(344,245,362,307,361,274,353,244);
  fill(400,270,220);
  quad(351,340,355,351,360,352,357,370);
  fill(400,270,220);
  quad(402,255,340,210,357,230,402,255);
  fill(400,270,220);
  quad(272,380,304,512,285,387,272,380);
  fill(400,270,220);
  quad(272,380,296,381,295,385,285,387);
  fill(400,270,220);
  quad(295,385,296,381,318,395,295,385);
  fill(400,270,220);
  quad(250,324,245,355,225,365,210,353);
  fill(400,270,220);
  quad(382,364,388,364,405,337,376,364);
    
  //gromit skin shadow+
  fill(350,220,190);
  quad(257,248,266,242,285,237,256,234);
  fill(350,220,190);
  quad(331,235,344,243,357,257,352,235);
  fill(350,220,190);
  quad(237,360,229,354,239,356,237,360);
  fill(350,220,190);
  quad(252,551,254,539,248,545,249,553);
  fill(350,220,190);
  quad(274,551,277,541,279,550,274,551);
  fill(350,220,190);
  quad(303,550,302,543,310,534,310,543);
  fill(350,220,190);
  quad(344,559,346,549,348,546,349,553);
  fill(350,220,190);
  quad(371,559,376,543,377,553,371,559);
  
  
   
  //gromit nose
  getVolume(); // this call fetches the microphone volume for the current frame.
float Y = map(volume, 0, 200, 2, 100); // With the map we can use it!
float X = map(volume, 0, 200, 2, 200); // The same we apply to create an Y variable.

  fill(random(600),100,500);
  ellipse(295,180,X+40,Y+40); 
  fill(600,600,600);
  ellipse(300,175,X+5,Y+5);
  
  
  
  //gromit ears-left
  fill(210,150,150);
  quad(267,89,252,98,239,83,254,73);
  fill(210,150,150);
  quad(254,73,249,83,217,84,237,60);
  fill(210,150,150);
  quad(218,84,238,60,216,58,208,91);
  fill(210,150,150);
  quad(217,58,209,91,201,109,199,62);
  fill(210,150,150);
  quad(202,109,200,62,186,72,191,110);
  fill(210,150,150);
  quad(187,73,193,111,182,97,181,86);

  //gromit ears-right
  fill(210,150,150);
  quad(289,90,306,97,306,85,288,75);
  fill(210,150,150);
  quad(306,85,288,77,294,60,314,64);
  fill(210,150,150);
  quad(294,62,314,65,303,47,294,62);
  fill(210,150,150);
  quad(302,48,314,65,335,62,343,39);
  fill(210,150,150);
  quad(334,62,342,39,358,48,363,80);
  fill(210,150,150);
  quad(358,48,363,80,370,78,365,56);

//gromit eyes

  fill(600,600,600);
  ellipse(274,130,25,25);
  fill(600,600,600);
  ellipse(298,126,25,25);
  
 
  
//gromit eyes move
  float mX = constrain(mouseX,271,279);
  float mY = constrain(mouseY,125,134);
  float mY2 = constrain(mouseY,119,131);
  float mX2 = constrain(mouseX,302,306);
  fill(100,200,500);
  ellipse(mX,mY,13,13);
  ellipse(mX2,mY2,13,13);


if(mousePressed){
 
fill(350,220,190);
ellipse(296,323,15,15);
stroke(0,0,0);
line(292,318,299,327);
stroke(0,0,0);
line(300,318,291,327);

//penguin
noStroke();
fill(50,50,50);
bezier(446,600,300,200,476,116,600,467);
quad(445,600,600,600,600,465,445,600);

fill(0,0,0);
ellipse(447,364,30,30);
ellipse(478,356,30,30);
fill(600,600,600);
ellipse(449,358,3,3);
ellipse(480,349,3,3);
fill(450,200,100);
bezier(456,439,440,370,490,360,514,422);
bezier(456,438,475,506,541,499,514,421);
fill(600,600,600);
bezier(477,424,485,410,495,420,492,428);
quad(478,424,456,395,460,387,481,420);
fill(500,350,200);
ellipse(484,429,16,16);
fill(350,150,130);
quad(486,437,491,433,520,448,505,483);
bezier(505,482,515,485,526,460,520,447);
fill(600,120,130);
bezier(394,300,382,184,483,190,500,280);
bezier(395,255,371,133,397,129,409,228);
bezier(410,232,396,131,431,99,436,221);
bezier(437,215,430,65,479,64,469,226);
bezier(469,226,511,74,570,112,492,260);


//background shap & bonus score
 
 translate(mouseX, mouseY);
  fill(random(600),450,100,80);
  stroke(600);
  strokeWeight(1);
  ellipse(0,0,70,70);
 

 


}

   
}












