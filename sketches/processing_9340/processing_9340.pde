
void setup () {

 
size (640, 640); 
background (255);  
 // boolean [] = anzahl; 


} 



void draw () {

//Quadrate  
int [][] x = {{0, 0},  {80, 0}, {320, 0}, {160, 80}, {80, 240}, {240, 400}, {320, 400}};
// Diagonale
int [][]d = {{240, 0}, {240, 80}, {320, 80}, {0, 160}, {80, 160}, {240, 160}, {480,160}, {560, 160}, {160, 240}, {320, 240},{400, 240}, {560, 240}, 
              {0, 320}, {320, 320}, {400, 320}, {480, 320}, {560, 320}, {80, 400}, {160, 400}, {480, 400}, {0, 480}, {80, 480}, {240, 480}, {400, 480},
             {80, 560}, {240, 560},  {400, 560}};  
           
//Linien
int [][] l = {{160,0}, {400,0}, {480, 0}, {560, 0}, {0, 80}, {80, 80}, {400, 80}, {480, 80}, {560, 80},
               {160, 160}, {320, 160}, {400, 160}, {0, 240}, {240, 240}, {480, 240}, {80, 320}, {160, 320}, {240, 320}, 
               {0, 400}, {400, 400}, {560, 400}, {160, 480}, {320, 480}, {480, 480}, {560, 480}, {0, 560}, {160, 560}, {320, 560}, {480, 560}, {560, 560}};  


fill (255); 
stroke(0); 
strokeWeight (2); 



//for Schleife f√ºr quadrate
for ( int i = 0; i < x.length; i++) {
     
  rect (x[i][0], x[i][1], 80, 80);
  }
  
//Diagonalen  
for (int k = 0; k < d.length; k++){  

pushMatrix (); 
translate (d[k][0], d[k][1]);  
line(0, 80, 80, 0);   
popMatrix(); 

}

//Linien


for (int a = 0; a <= 80; a+=10) {
  for (int f = 0; f< l.length; f++) {

    pushMatrix(); 
translate (l[f][0], l[f][1]);   

line(0, 1*a, 80, 1*a); 
//line(0, 2, 80, 2); 
popMatrix(); }

}
}
  









