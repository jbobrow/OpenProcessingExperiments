
/*************************
 * Barf Monster Animation
 * credit: Matt Richard
 * Marcos Chin Sep 18, 2011
 *************************/

float yTeeth = 185.0;
float incrTeeth = 1.0;
float xEye = 80;
float incrEye = 0.3;
float yTail = 0.0;
float incrTail = .5;
float yWater = 300.0;
float incrWater = 1;

void setup() {
  size (300, 300);// creates a 300x300 pixel sketch: size (width, height)
  smooth ();// turns on anti-aliasing to make shapes look nicer
}

void draw() {
  background (0);// black



  /************************
   * BARF
   ************************/


  if (mousePressed == false) {

    fill (0, 255, 0);
    stroke (255, 210, 0);
    bezier (60, 220, 30, 240, 50, 250, 60, 220);
    bezier (70, 220, 40, 240, 70, 270, 70, 220);
    bezier (60, 190, 30, 190, 20, 240, 60, 190);
    bezier (90, 190, 50, 250, 90, 250, 90, 190);
    bezier (80, 180, 40, 200, 70, 240, 80, 180);
    bezier (40, 270, 15, 275, 30, 300, 40, 270);
    bezier (90, 250, 80, 260, 100, 270, 90, 250);
    bezier (30, 220, 5, 230, 30, 230, 30, 220);
  }

  /************************************************
   *        TEETH
   ************************************************/


  /************************
   * TEETH
   ************************/

  yTeeth += incrTeeth;
  if ( yTeeth < 150 || yTeeth > 210 ) {
    incrTeeth*= -1;
    yTeeth += incrTeeth;
  } 
  fill (255);
  noStroke ();
  triangle (60, yTeeth, 60, 160, 80, 160);
  triangle (70, yTeeth + 10, 70, 160, 90, 160);
  triangle (80, yTeeth + 20, 80, 160, 100, 160);
  triangle (90, yTeeth + 25, 90, 160, 110, 160);
  triangle (100, yTeeth + 20, 100, 160, 120, 160);

  /*

  /************************
   * FACE
   ************************/
 
  stroke (255, 255, 255);
  /* FILL YELLOW */

  fill (250, 210, 20);// yellow
   triangle (130, 40, 70, 50, 90, 80);
   triangle (100, 120, 90, 80, 40, 100);
   quad (200, 50, 220, 70, 200, 100, 150, 70);// right
   triangle (150, 120, 190, 175, 120, 170);
   triangle (240, 150, 250, 100, 200, 100);
   quad (40, 100, 70, 150, 50, 170, 30, 120);
   triangle (120, 170, 100, 120, 70, 150);
   triangle (230, 200, 240, 150, 190, 175);
   triangle (215, 230, 190, 175, 170, 240);
   triangle (100, 220, 170, 240, 110, 190);

  /* FILL PINK */
 
  fill (250, 0, 130);// pink
   triangle (70, 50, 40, 100, 90, 80);
   quad(130, 40, 150, 70, 100, 120, 90, 80);// top
   triangle (150, 120, 200, 100, 150, 70);
   triangle (120, 170, 150, 120, 100, 120);
   triangle (190, 175, 240, 150, 200, 100);
   quad (70, 150, 120, 170, 110, 190, 50, 170);
   triangle (215, 230, 230, 200, 190, 175);
   triangle (110, 190, 170, 240, 190, 175);
   quad (276, 135, 270, 170, 230, 200, 240, 150);
   triangle (45, 190, 50, 170, 25, 150);
   
  /* FILL BLUE */
  
  fill (5, 120, 255);// blue
   triangle (130, 40, 200, 50, 150, 70);
   triangle (100, 120, 150, 120, 150, 70);
   triangle (250, 100, 220, 70, 200, 100);
   triangle (150, 120, 190, 175, 200, 100);
   triangle (70, 150, 100, 120, 40, 100);
   triangle (190, 175, 120, 170, 110, 190);
   triangle (25, 150, 30, 120, 50, 170);
   triangle (276, 135, 250, 100, 240, 150);
   triangle (215, 230, 270, 170, 230, 200);
 

  /************************
   * EYES
   ************************/
  fill (255, 255, 255);
  stroke (255, 0, 0);
  ellipse (80, 130, 40, 40);
  ellipse (120, 150, 40, 40);

  xEye += incrEye;
  if ( xEye < 65 || xEye > 90 ) {
    incrEye *= -1;
    xEye += incrEye;
  }
  /************************
   * EYEBALLS
   ************************/


  fill (0, 0, 0);
  ellipse (xEye, 130, 5, 5);
  ellipse (xEye + 40, 150, 5, 5);



  /************************
   * GROUND
   ************************/
  stroke (255, 210, 0, 120);
  strokeWeight (2);
  line (0, 280, 0, 300);
  line (5, 280, 5, 300);
  line (10, 280, 10, 300);
  line (15, 280, 15, 300);
  line (20, 280, 20, 300);
  line (25, 280, 25, 300);
  line (30, 280, 30, 300);
  line (35, 280, 35, 300);
  line (40, 280, 40, 300);
  line (45, 277, 45, 300);
  line (50, 283, 50, 300);
  line (63, 280, 55, 300);
  line (60, 280, 60, 300);
  line (65, 280, 65, 300);
  line (75, 277, 75, 300);
  line (80, 280, 80, 300);
  line (85, 280, 85, 300);
  line (90, 280, 90, 300);
  line (100, 280, 100, 300);
  line (110, 280, 110, 300);
  line (120, 280, 120, 300);
  line (130, 280, 130, 300);
  line (135, 280, 135, 300);
  line (140, 280, 140, 300);
  line (150, 280, 150, 300);
  line (155, 280, 155, 300);
  line (160, 280, 160, 300);
  line (164, 280, 164, 300);
  line (167, 280, 167, 300);
  line (170, 280, 170, 300);
  line (180, 280, 180, 300);
  line (185, 280, 185, 300);
  line (190, 280, 190, 300);
  line (195, 280, 195, 300);
  line (200, 280, 200, 300);
  line (205, 280, 205, 300);
  line (210, 280, 210, 300);
  line (215, 280, 215, 300);
  line (220, 280, 220, 300);

  /************************
   * HAIR
   ************************/
  yTail += incrTail;
  if ( yTail < -50 || yTail > 10) {
    incrTail *= -1;
    yTail += incrTail;
  }

  stroke (255, 255, 255);
  strokeWeight (1);
  noFill ();
  bezier (260, yTail, 230, 10, 270, 100, 200, 50);
  bezier (290, yTail + 50, 230, 10, 270, 100, 220, 70);
  bezier (280, yTail + 40, 230, 60, 270, 100, 210, 60);
  bezier (290, yTail + 20, 230, 10, 270, 100, 200, 50);
  bezier (280, yTail + 70, 250, 40, 270, 100, 220, 70);
  
  
    /************************
   * WATER
   ************************/


  fill (50, 120, 240, 80);
  noStroke ();
  rect (0, yWater, 305, 310);

  if (mousePressed == true) {
    fill (50, 120, 240, 80);
    rect (0, yWater - 120, 305, 310);
  }
  else {
    fill (50, 120, 240, 80); 
    rect (0, 295, 305, 310);
  }


}


