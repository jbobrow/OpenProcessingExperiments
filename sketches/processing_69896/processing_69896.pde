
void setup () {

size(600,600);
background(255,0,0);
fill(255,0,0);
smooth();

}

void draw() {
  for (int i = 0; i < 1000; i = i + 200) {
    for (int j = 0; j < 1000; j = j + 200) {
      //brick(i, j);
   

//void brick(float xVal, float yVal) {
//x = xVal;
//y = yVal;

rect(i+20, j+20, 160, 160);


//rect(40,40,120,120);

line(i+20,j+20,i+180,j+180);
//line(20,j,180,160+j);
line(i+180,j+20,i+20,j+180);
//line(i+40,j+20,i+20,j+20);
//line(i+30,j,i+30,j+20);
//line(i+40,j,i+120,j+160);
line(i+70,j+20,i+130,j+180);
//line(i+120,j-20,i+40,j+160);
//line(i+110,j,i+50,j+180);
line(i+60,j+20,i+140,j+180);
line(i-20,j+40,i,j+40);
//line(i-20,j+50,i,j+50);
//line(i+160,j+40,i+180,j+40);
//line(180,70,200,70);
//line(180,130,200,130);
//line(180,140,200,140);
line(i+20,j+130,i+20,j+130);
line(i+20,j+140,i+20,j+124);
line(i+110,j,i+110,j+20);
line(i+120,j,i+120,j+20);
line(130,180,130,200);
line(140,180,140,200);
//line(i+40,j+160,i+40,j+180);
line(i+70,j+180,i+70,j+200);
line(i+70,j+180,i+130,j+20);
line(i+60,j+180,i+140,j+20);
line(i+20,j+60,i+180,j+140);
line(i+20,j+70,i+180,j+130);
line(i+20,j+130,i+180,j+70);
line(i+20,j+140,i+180,j+60);
//rect(40,40,120,120);
//line(10,0,10,200);
//line(190,0,190,200);
//line(0,10,200,10);
//line(0,190,200,190);
line(i+20,j+100,i+180,j+100);
line(i+100,j+20,i+100,j+180);
line(i+170,j+20,i+30,j+180);
line(i+160,j+20,i+40,j+180);
line(i+150,j+20,i+50,j+180);
line(i+120,j+20,i+80,j+180);
line(i+110,j+20,i+90,j+180);
line(i+30,j+20,i+170,j+180);
line(i+40,j+20,i+160,j+180);
line(i+50,j+20,i+150,j+180);
line(i+80,j+20,i+120,j+180);
line(i+90,j+20,i+110,j+180);
line(i+20,j+30,i+180,j+170);
line(i+20,j+40,i+180,j+160);
line(i+20,j+50,i+180,j+150);
line(i+20,j+80,i+180,j+120);
line(i+20,j+90,i+180,j+110);
line(i+20,j+110,i+180,j+90);
line(i+20,j+120,i+180,j+80);
line(i+20,j+150,i+180,j+50);
line(i+20,j+170,i+180,j+30);
line(i+20,j+160,i+180,j+40);
line(i+180,j-20,i+180,j+20);
line(i-20,j+20,i+20,j+20);
line(i-20,j+180,i+20,j+180);

line(i+30,j-20,i+30,j+20);
line(i+40,j-20,i+40,j+20);
line(i+50,j-20,i+50,j+20);
line(i+60,j-20,i+60,j+20);
line(i+70,j-20,i+70,j+20);
line(i+80,j-20,i+80,j+20);
line(i+90,j-20,i+90,j+20);
line(i+100,j-20,i+100,j+20);
line(i+110,j-20,i+110,j+20);
line(i+120,j-20,i+120,j+20);
line(i+130,j-20,i+130,j+20);
line(i+140,j-20,i+140,j+20);
line(i+150,j-20,i+150,j+20);
line(i+160,j-20,i+160,j+20);
line(i+170,j-20,i+170,j+20);
line(i-20,j+30,i+20,j+30);
line(i-20,j+40,i+20,j+40);
line(i-20,j+50,i+20,j+50);
line(i-20,j+60,i+20,j+60);
line(i-20,j+70,i+20,j+70);
line(i-20,j+80,i+20,j+80);
line(i-20,j+90,i+20,j+90);
line(i-20,j+100,i+20,j+100);
line(i-20,j+110,i+20,j+110);
line(i-20,j+120,i+20,j+120);
line(i-20,j+130,i+20,j+130);
line(i-20,j+140,i+20,j+140);
line(i-20,j+150,i+20,j+150);
line(i-20,j+160,i+20,j+160);
line(i-20,j+170,i+20,j+170);
line(i,j,i,j+200);
line(i,j,i+200,j);
line(i+20,j-20,i+20,j+20);
}
    }
}
