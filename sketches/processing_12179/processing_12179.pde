
// [streetlights]
// dev : Benjamin Poynter
// An interactive/contemporary cel-animation.
// Trapped forever in a loop of desire. Unless
// he deciphers the meaning of things seen in dreams.
// Only one command = RIGHT DIRECTIONAL KEY.

int scrollX=0; //sets the begin point for the image scroll
int scrollXR=scrollX+5000; //sets the capacity/X-axis for scrolling
int SR=16; //sets the speed which the screen will scroll
PImage focus; //variable to call the background image
PImage fig1; //variable to call first dream image
PImage fig2; //variable to call second dream image
PImage fig3; //etc.
PImage fig4; //etc.
PImage fig5; //etc.
PImage monitor1;
PImage monitor2;
PImage monitor3;
PImage monitor4;
PImage monitor5;
PImage monitor6;
int numFrames = 4; //sets the number of frames in both walk/stand animations
int frame2 = 0; //sets the initial frame to begin at in the loop. for (stand).
int frame3 = 0; //see above. for (walk).
int x = 255; //variable to make appear/make disppear different animation loops
int y = 255; //variable to make disappear the main menu text
int z = 255; //variable for a random alpha/gamma flicker effect
int blip = 0; //will turn on/into a transparent tint upon ->R
PImage[] image = new PImage [numFrames]; //varible for the set of animation loops
PFont font; //calls the variable to use for text typed.
int title = 255; //variable to make disappear the title rectangle bg.

import ddf.minim.*; 
AudioPlayer player;
Minim minim; //these three lines call the minim audio program to be used.

void setup () {
  size (640, 360); //sets size of canvas/program.
  smooth (); //smoothens out in program generated material.
  focus= loadImage("bgstreetlights.jpg"); //loads background scroll image.
  font = loadFont("din.vlw"); //loads the font to be typed.
  fig1 = loadImage("heartj.png"); //loads first dream fragment image.
  fig2 = loadImage("heartj.png"); //loads second.
  fig3 = loadImage("heartj.png"); //etc.
  fig4 = loadImage("heartj.png"); //etc.
  fig5 = loadImage("heartj.png"); //etc.
  monitor1 = loadImage("monitor1.jpg"); //loads the top menu screen
  monitor2 = loadImage("monitor2.jpg"); //etc
  monitor3 = loadImage("monitor3.jpg"); //
  monitor4 = loadImage("monitor4.jpg"); //
  monitor5 = loadImage("monitor5.jpg"); //
  monitor6 = loadImage("monitor6.jpg"); //

     minim = new Minim(this);
player = minim.loadFile("tokimonsta.mp3");
player.play();
player.loop();
player.setGain(3);
//previous five lines load a harmonic, atmospheric soundscape to
//counteract the nighttime visuals generated by images above.

} //V O I D  S E T U P

void draw(){
  
  image(focus, scrollX, 0); //calls (the image, where at on x-axis, y-axis)
  scrollX-=SR; //ties in the x-axis/scroll position with scroll rate.
  tint(255, random(255)); //a flicker effect for images/dream fragments.
  image(fig1, scrollX+900, 100); //the "five" fragments loaded from above.
  image(fig2, scrollX+1500, 300); //all five positioned down the line.
  image(fig3, scrollX+2650, 200); //(image, x-axis(on scroll), y-axis)
  image(fig4, scrollX+3100, 100); //
  image(fig5, scrollX+3700, 140);//
  tint(255, 200);
  image(monitor1, 0, 0);
  if (scrollX<=-4150){ 
  scrollX=0; 
  //Above two lines. A command/trap laid where if the x-axis/scroll
  //position hits 4150 pixels, it resets back at the beginning (0 pixels).
  
  } //I F  S C R O L L
  
    SR=0;  //No scroll rate, because we want the 'figure' to be standing.
    imageMode (CORNER);
    tint (255, 255);
    tint (255, x); //X-variable will be changed to 0 if key -> if pressed.
    x=255; //But is called again to be visible if -> is not held/pressed.
    image[0] = loadImage("bensit.png"); //frames of the standing animation
    image[1] = loadImage("bensit2.png"); //ironically named sit
    image[2] = loadImage("bensit.png"); // an aesthetic light flicker
    image[3] = loadImage("bensit2.png"); // on clothing
    frame2 = (frame2 + 1) % numFrames; //Sets animation to run with one another.
    image (image[frame2], 40, 110); //Sets position of animation to take place.
    rectMode (CENTER);
    fill(255, title); //'title' will be turned to '0' if -> is pressed.
    rect (320, 180, 640, 360); //This rectangle is title screen. Will go away.
    float z = random(100, 255); //Gives flicker to variables z and y.
    fill(z, y); //Flickers the opening font.
    textFont(font, 120); //(loaded font, font size)
    text("STREETLIGHTS", 35, 200);
    textFont(font, 25);
    text("(FIND THE MISSING PIECES OF YOUR HEART. [R->] TO SPRAWL.)", 60, 230);  
  
    if (keyPressed && (key == CODED)) {
 
    if (keyCode == RIGHT) {
    SR=16;  //new moving scroll rate to move background image.
    imageMode (CORNER);
    tint (255, 255);
    x=0; //previous stand animation now disappears.
    image[0] = loadImage("benwalk01.png");
    image[1] = loadImage("benwalk02.png");
    image[2] = loadImage("benwalk01.png");
    image[3] = loadImage("benwalk04.png");
    frame3 = (frame3 + 1) % numFrames;
    image (image[frame3], 40, 110); //new walking animation loaded if -> pressed.
    y=0; //title text disappears. permanently.
    title=0; //title screen/rectangle disappears. permanently.
    blip= 120; //makes blip on monitor above go on
     
    } //K E Y  R I G H T
     
  } //I F  K E Y  P R E S S E D
  
 //THE FOLLOWING CONDITIONALS...
 //THESE SET TWO PARTICULAR POINTS-
 //1.) WHEN THE TOP MONITOR WILL CHANGE and
 //2.) WHAT AUDIO WILL PLAY WHEN THE CHARACTER HITS THAT POINT
 
   if (scrollX<=-810 && scrollX>=-825){
      minim = new Minim(this);
player = minim.loadFile("sunset.mp3");
player.play();
player.setGain(10);
   } //FIRST FIGMENT SFX
   
   if (scrollX<=-810){
            tint(255, 200);
  image(monitor2, 0, 0);
   }//monitor2
   
      if (scrollX<=-1460 && scrollX>=-1475){
      minim = new Minim(this);
player = minim.loadFile("stella.mp3");
player.play();
player.setGain(5);
   } //SECOND FIGMENT SFX
   
   if (scrollX<=-1460){
               tint(255, 200);
  image(monitor3, 0, 0);
   }//monitor3
   
      if (scrollX<=-2560 && scrollX>=-2575){
      minim = new Minim(this);
player = minim.loadFile("movies.mp3");
player.play();
player.setGain(16);
   } //THIRD FIGMENT SFX
   
    if (scrollX<=-2560){
             tint(255, 200);
  image(monitor4, 0, 0);
    }//monitor4
   
      if (scrollX<=-2960 && scrollX>=-2975){
      minim = new Minim(this);
player = minim.loadFile("dumb.mp3");
player.play();
player.setGain(10);
   } //FOURTH FIGMENT SFX
   
    if (scrollX<=-2960){
             tint(255, 200);
  image(monitor5, 0, 0);
    } //monitor5
   
      if (scrollX<=-3660 && scrollX>=-3675){
      minim = new Minim(this);
player = minim.loadFile("liveagain.mp3");
player.play();
player.setGain(12);
   } //FIFTH FIGMENT SFX
   
    if (scrollX<=-3660){
          tint(255, 200);
  image(monitor6, 0, 0);
    }//monitor6
    
    
 //THE FOLLOWING CONDITIONALS...
 //WILL SET A SMALL POINT ON THE TOP MONITOR TO LET KNOW
 //WHERE THE PERSON IS AT ON THE WORLD MAP IN MOTION.

       if (scrollX<=0 && scrollX>=-250){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (290, 35, 10, 10);
         }
         
         if (scrollX<=-250 && scrollX>=-500){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (310, 35, 10, 10);
         }
       
        if (scrollX<=-500 && scrollX>=-750){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (330, 35, 10, 10);
       }
       
               if (scrollX<=-750 && scrollX>=-1000){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (355, 35, 10, 10);
         }
       
        if (scrollX<=-1000 && scrollX>=-1250){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (380, 35, 10, 10);
       }
       
               if (scrollX<=-1250 && scrollX>=-1500){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (405, 35, 10, 10);
         }
       
        if (scrollX<=-1500 && scrollX>=-1750){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (430, 35, 10, 10);
       }
       
               if (scrollX<=-1750 && scrollX>=-2000){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (450, 35, 10, 10);
         }
       
        if (scrollX<=-2000 && scrollX>=-2250){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (470, 35, 10, 10);
       }
       
               if (scrollX<=-2250 && scrollX>=-2500){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (495, 35, 10, 10);
         }
       
        if (scrollX<=-2500 && scrollX>=-2750){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (520, 35, 10, 10);
       }
       
               if (scrollX<=-2750 && scrollX>=-3000){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (540, 35, 10, 10);
         }
       
        if (scrollX<=-3000 && scrollX>=-3250){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (570, 35, 10, 10);
       }
       
               if (scrollX<=-3250 && scrollX>=-3500){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (590, 35, 10, 10);
         }
       
        if (scrollX<=-3500 && scrollX>=-3800){
          noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (600, 35, 10, 10);
       }
       
               if (scrollX<=-3800 && scrollX>=-4150){
       noStroke();
       rectMode (CENTER);
       fill(255, 0, 0, blip);
       rect (610, 35, 10, 10);
         }
  
  } //V O I D  D R A W

