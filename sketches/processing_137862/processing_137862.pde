
/*Backward Journey
Rotating geometrical contours generated by the mouse coordinates.
Color hue generated by mouse coordinates, both for background and lines
Mouse pressed and drag determines the trajectory
Mouse press and mouse release represent the starting, respectively, ending points of the backward journey.
Keyboard input: "Delete" or "Backspace" for start screen
Keyboard input: "S" or "s" for saving screen shot 

Artistic statement: Inspired by one of the evaluated assignments, 
initially it wanted to represent a traumatic life experience: 
my coming back to life after a surgery. From the total blackout first came consciousness, 
than sound perception and last image perception, and this order created an unforgettable scary experience. 
But the need to integrate an image modified the initial project and gave it an unexpected dimensionâ€¦
It become the backward journey of a dynamic life.
*/

PImage portocala;

//Setup block and variables

void setup(){
  size(720, 720);
  colorMode(HSB, 360, 100, 100, 100);
  smooth();
  noFill();
  background(0);
  portocala = loadImage("portocala.jpg");
}

color c = color(HSB,360, 100, 100);
float r = 0;
float p = 0;

//Draw block, mouse pressed: set color, rotation, stroke

void draw(){
  if(mousePressed){
    background(360-(mouseX+mouseY)/10, int(random(10, 60)), 100, 100);
    c = color(360-int((mouseX+mouseY)/4), int(random(50, 100)), int(random(40, 100)), 100);
    pushMatrix();
    beginShape();
    for (r=0; r<400; r=r+20){
      float x = mouseX + r * cos(p);
      float y = mouseY + r * sin(p);
      stroke(c);
      strokeWeight(3);
      vertex(x, y);
      p += 10;
    }
    endShape();
    popMatrix();
  }
}

//Mouse released, image as backgroud

void mouseReleased(){
  image(portocala, 0, 0);
}

//Input from keyboard

void keyReleased(){
  if (key == DELETE || key == BACKSPACE) background(0);
  if (key=='s' || key=='S') saveFrame();
 }

