
int eSize = 20;

size(400,400);
colorMode(RGB,400);
background(400);
noStroke();

 for(int i=-100; i<=400; i +=15) {
   fill(0,300,300-i,300);
   rect(0+i,i,eSize,eSize);
   rect(20+i,i,eSize,eSize);
   rect(40+i,i,eSize,eSize);
   rect(60+i,i,eSize,eSize);
   rect(80+i,i,eSize,eSize);
   rect(100+i,i,eSize,eSize);
   rect(120+i,i,eSize,eSize);
   rect(140+i,i,eSize,eSize);
   rect(160+i,i,eSize,eSize);
   rect(180+i,i,eSize,eSize);
   rect(200+i,i,eSize,eSize);
   rect(220+i,i,eSize,eSize);
   rect(240+i,i,eSize,eSize);
   rect(260+i,i,eSize,eSize);
   rect(280+i,i,eSize,eSize);
   rect(300+i,i,eSize,eSize);
   rect(320+i,i,eSize,eSize);
   rect(340+i,i,eSize,eSize);
   rect(360+i,i,eSize,eSize);
   rect(380+i,i,eSize,eSize);
   rect(400+i,i,eSize,eSize);   
   stroke(0,0,0,220-i);
  }
 for(int i=-100; i<=400; i +=20) {
   fill(0,300,300-i,300);
   rect(400-i,20+i,eSize,eSize);
   rect(400-i,40+i,eSize,eSize);
   rect(400-i,60+i,eSize,eSize);
   rect(400-i,80+i,eSize,eSize);
   rect(400-i,100+i,eSize,eSize);
   rect(400-i,120+i,eSize,eSize);
   rect(400-i,140+i,eSize,eSize);
   rect(400-i,160+i,eSize,eSize);
   rect(400-i,180+i,eSize,eSize);
   rect(400-i,200+i,eSize,eSize);
   rect(400-i,220+i,eSize,eSize);
   rect(400-i,240+i,eSize,eSize);
   rect(400-i,260+i,eSize,eSize);
   rect(400-i,280+i,eSize,eSize);
   rect(400-i,300+i,eSize,eSize);
   rect(400-i,320+i,eSize,eSize);
   rect(400-i,340+i,eSize,eSize);
   rect(400-i,360+i,eSize,eSize);
   rect(400-i,380+i,eSize,eSize);
   rect(400-i,400+i,eSize,eSize);   
   stroke(0,0,0,350-i);
  }
 
  for(int i=-100; i<=400; i +=5) {
   fill(0,300,300-i,300);
   rect(i,20+i,eSize,eSize);
   rect(i,40+i,eSize,eSize);
   rect(i,60+i,eSize,eSize);
   rect(i,80+i,eSize,eSize);
   rect(i,100+i,eSize,eSize);
   rect(i,120+i,eSize,eSize);
   rect(i,140+i,eSize,eSize);  
   rect(i,160+i,eSize,eSize);
   rect(i,180+i,eSize,eSize);
   rect(i,200+i,eSize,eSize);
   rect(i,220+i,eSize,eSize);
   rect(i,240+i,eSize,eSize);
   rect(i,260+i,eSize,eSize);
   rect(i,280+i,eSize,eSize);
   rect(i,300+i,eSize,eSize);
   rect(i,320+i,eSize,eSize);
   rect(i,340+i,eSize,eSize);
   rect(i,360+i,eSize,eSize);
   rect(i,380+i,eSize,eSize);
   rect(i,400+i,eSize,eSize);   
   stroke(0,0,0,300-i);
  } 
  for(int i=-100; i<=400; i +=10) {
   fill(0,300,300-i,300);
   rect(380-i,i,eSize,eSize);
   rect(360-i,i,eSize,eSize);
   rect(340-i,i,eSize,eSize);
   rect(320-i,i,eSize,eSize);
   rect(300-i,i,eSize,eSize);
   rect(280-i,i,eSize,eSize);
   rect(260-i,i,eSize,eSize);
   rect(240-i,i,eSize,eSize);
   rect(220-i,i,eSize,eSize);
   rect(200-i,i,eSize,eSize);
   rect(180-i,i,eSize,eSize);
   rect(160-i,i,eSize,eSize);
   rect(140-i,i,eSize,eSize);
   rect(120-i,i,eSize,eSize);
   rect(100-i,i,eSize,eSize);
   rect(80-i,i,eSize,eSize);
   rect(60-i,i,eSize,eSize);
   rect(40-i,i,eSize,eSize);
   rect(20-i,i,eSize,eSize);
   rect(0-i,i,eSize,eSize);   
   stroke(0,0,0,300-i);
  }
  for(int i=-100; i<=400; i +=10) {
   fill(300-i,100,300,300);
   rect(80+i,i,eSize,eSize); 
   rect(100+i,i,eSize,eSize); 
   rect(120+i,i,eSize,eSize);
   rect(140+i,i,eSize,eSize);
   rect(160+i,i,eSize,eSize);
   rect(180+i,i,eSize,eSize);
   rect(200+i,i,eSize,eSize);
   rect(220+i,i,eSize,eSize);
   rect(240+i,i,eSize,eSize);
   rect(260+i,i,eSize,eSize);
   rect(280+i,i,eSize,eSize);
   rect(300+i,i,eSize,eSize);
   rect(320+i,i,eSize,eSize);
   rect(340+i,i,eSize,eSize);
   rect(360+i,i,eSize,eSize);
   rect(380+i,i,eSize,eSize);
   rect(400+i,i,eSize,eSize);   
   stroke(0,0,0,300-i);
  }
 for(int i=-100; i<=400; i +=15) {
   fill(300-i,100,300,300);
   rect(400-i,80+i,eSize,eSize);
   rect(400-i,100+i,eSize,eSize); 
   rect(400-i,120+i,eSize,eSize);
   rect(400-i,140+i,eSize,eSize);
   rect(400-i,160+i,eSize,eSize);
   rect(400-i,180+i,eSize,eSize);
   rect(400-i,200+i,eSize,eSize);
   rect(400-i,220+i,eSize,eSize);
   rect(400-i,240+i,eSize,eSize);
   rect(400-i,260+i,eSize,eSize);
   rect(400-i,280+i,eSize,eSize);
   rect(400-i,300+i,eSize,eSize);
   rect(400-i,320+i,eSize,eSize);
   rect(400-i,340+i,eSize,eSize);
   rect(400-i,360+i,eSize,eSize);
   rect(400-i,380+i,eSize,eSize);
   rect(400-i,400+i,eSize,eSize);   
   stroke(0,0,0,220-i);
  }
   for(int i=-100; i<=400; i +=20) {
   fill(300-i,100,300,300);
   rect(i,60+i,eSize,eSize); 
   rect(i,80+i,eSize,eSize); 
   rect(i,100+i,eSize,eSize); 
   rect(i,120+i,eSize,eSize); 
   rect(i,140+i,eSize,eSize);  
   rect(i,160+i,eSize,eSize);
   rect(i,180+i,eSize,eSize);
   rect(i,200+i,eSize,eSize);
   rect(i,220+i,eSize,eSize);
   rect(i,240+i,eSize,eSize);
   rect(i,260+i,eSize,eSize);
   rect(i,280+i,eSize,eSize);
   rect(i,300+i,eSize,eSize);
   rect(i,320+i,eSize,eSize);
   rect(i,340+i,eSize,eSize);
   rect(i,360+i,eSize,eSize);
   rect(i,380+i,eSize,eSize);
   rect(i,400+i,eSize,eSize);   
   stroke(0,0,0,220-i);
  } 
 for(int i=-100; i<=400; i +=5) {
   fill(300-i,100,300,300);
   rect(300-i,i,eSize,eSize);
   rect(280-i,i,eSize,eSize);
   rect(260-i,i,eSize,eSize);
   rect(240-i,i,eSize,eSize);
   rect(220-i,i,eSize,eSize);
   rect(200-i,i,eSize,eSize);
   rect(180-i,i,eSize,eSize);
   rect(160-i,i,eSize,eSize);
   rect(140-i,i,eSize,eSize);
   rect(120-i,i,eSize,eSize);
   rect(100-i,i,eSize,eSize);
   rect(80-i,i,eSize,eSize);
   rect(60-i,i,eSize,eSize);   
   rect(40-i,i,eSize,eSize);   
   rect(20-i,i,eSize,eSize);   
   rect(0-i,i,eSize,eSize);   
   stroke(0,0,0,300-i);
  }  
  for(int i=-100; i<=400; i +=5) {
   fill(0,400-i,300,300);
   rect(200+i,i,eSize,eSize);
   rect(220+i,i,eSize,eSize);
   rect(240+i,i,eSize,eSize);
   rect(260+i,i,eSize,eSize);
   rect(280+i,i,eSize,eSize);
   rect(300+i,i,eSize,eSize);
   rect(320+i,i,eSize,eSize);
   rect(340+i,i,eSize,eSize);
   rect(360+i,i,eSize,eSize);
   rect(380+i,i,eSize,eSize);
   rect(400+i,i,eSize,eSize);   
   stroke(0,0,0,220-i);
  }
   for(int i=-100; i<=400; i +=10) {
   fill(0,400-i,300,300);
   rect(400-i,180+i,eSize,eSize);
   rect(400-i,200+i,eSize,eSize);
   rect(400-i,220+i,eSize,eSize);
   rect(400-i,240+i,eSize,eSize);
   rect(400-i,260+i,eSize,eSize);
   rect(400-i,280+i,eSize,eSize);
   rect(400-i,300+i,eSize,eSize);
   rect(400-i,320+i,eSize,eSize);
   rect(400-i,340+i,eSize,eSize);
   rect(400-i,360+i,eSize,eSize);
   rect(400-i,380+i,eSize,eSize);
   rect(400-i,400+i,eSize,eSize);   
   stroke(0,0,0,220-i);
  }
   for(int i=-100; i<=400; i +=15) {
   fill(0,400-i,300,300);
   rect(i,140+i,eSize,eSize);  
   rect(i,160+i,eSize,eSize);
   rect(i,180+i,eSize,eSize);
   rect(i,200+i,eSize,eSize);
   rect(i,220+i,eSize,eSize);
   rect(i,240+i,eSize,eSize);
   rect(i,260+i,eSize,eSize);
   rect(i,280+i,eSize,eSize);
   rect(i,300+i,eSize,eSize);
   rect(i,320+i,eSize,eSize);
   rect(i,340+i,eSize,eSize);
   rect(i,360+i,eSize,eSize);
   rect(i,380+i,eSize,eSize);
   rect(i,400+i,eSize,eSize);   
   stroke(0,0,0,220-i);
  } 
   for(int i=-100; i<=400; i +=20) {
   fill(0,400-i,300,300);
   rect(240-i,i,eSize,eSize);
   rect(220-i,i,eSize,eSize);
   rect(200-i,i,eSize,eSize);
   rect(180-i,i,eSize,eSize);
   rect(160-i,i,eSize,eSize);
   rect(140-i,i,eSize,eSize);
   rect(120-i,i,eSize,eSize);
   rect(100-i,i,eSize,eSize);
   rect(80-i,i,eSize,eSize);
   rect(60-i,i,eSize,eSize);
   rect(40-i,i,eSize,eSize);
   rect(20-i,i,eSize,eSize);
   rect(0-i,i,eSize,eSize);   
   stroke(0,0,0,300-i);
  }
 


