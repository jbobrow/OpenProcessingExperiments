
//----------------------
// by Danko 2012
//----------------------

int xoffset = 200;
int yoffset = 200;

int w = 12;
int h = 16;
int l = 10;
int lxSI, lySI;
int amplada, alcada;
int num = 10;
int mx[] = new int[num];
int my[] = new int[num];


void setup() {
  lxSI = w*l;
  lySI = h*l;
  amplada = xoffset*2 + lxSI;
  alcada = yoffset*2+lySI;

  size(amplada, alcada);
  background(255);
  
}
// RED
void draw() 
{
  background(255);
  int which = frameCount % num;
  mx[which] = mouseX;
  my[which] = mouseY;
   
  for (int v = 0; v < num; v++) 
   {
    int z = (which+1 + v) % num;
    fill(255,0,0);
    noStroke();
    SuperMario(mx[z], my[z], v/2, v/2); 
   }
   //SuperMario(mx[z], my[z]);
    
}


void SuperMario(int a, int b, int c, int d) 
{

  int[] vermell = {
    0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,
    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,
    0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
    0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0,
    0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,
    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
    0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  };
 
  int[] negre = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
    0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 
    0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 
    0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0,
    0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,
    1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,
    0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0,
    1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,
  };

  int[] carn = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 
    0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 
    0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
    0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 
    0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 
    1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 
    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  };

  int index=0;
  for (int j = 0; j<h; j++) 
  {
    for (int i = 0; i<w; i++)
    {
      if(vermell[index]==1)
        rect(a+i*c,b+j*c,c,c);
      index++;
     }
  }
  fill(90,90,90);   
  index=0;
  for (int k = 0; k<h;k++)
  {
    for (int m = 0; m<w; m++) 
    {
      if(negre[index]==1)
        rect(a+m*c,b+k*c,c,c);
      index++;
    }
  }
   fill(250,190,0);   
  index=0;
  for (int n = 0; n<h;n++)
  {
    for (int p = 0; p<w; p++) 
    {
      if(carn[index]==1)
        rect(a+p*c,b+n*c,c,c);
      index++;
    }
  }
}

