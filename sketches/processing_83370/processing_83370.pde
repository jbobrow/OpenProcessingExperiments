
// auto_poetry: automatic poetry generated with twitter and processing
//adapted from this tutorial:http://blog.blprnt.com/blog/blprnt/updated-quick-tutorial-processing-twitter
//using twitter4j library
//created by evan bender // evanbender.web.fc2.com


//Build an ArrayList to hold all of the words that we get from the imported tweets
PFont font;
ArrayList<String> words = new ArrayList();

void setup() {
  size(1920,1200);
  background(0);
  smooth();

  // Create the font
  font = loadFont ("DINPro-Regular-144.vlw");
  textFont(font);
  
  fill(50);
  textAlign(LEFT);
  textSize(48);
  text("a u t o _ p o e t r y", 20,50);//loads during setup but later replaced in draw
  
  textAlign(CENTER);
  fill(255);
  textSize(144);
  text("loading...",width/2, height/2);//only shows up during setup
  
  textAlign(RIGHT);
  textSize(18);
  fill(50);
  text("poetry automatically generated by twitter + processing", 1910, 1180);//
//Credentials , these connect to twitter
ConfigurationBuilder cb = new ConfigurationBuilder();
cb.setOAuthConsumerKey("133LPA5Zh1tUsvWqVetTA");
cb.setOAuthConsumerSecret("l9Zr244OUh7lbgKu79kLDPHVl0l5TOrmHojZ2qtc3E");
cb.setOAuthAccessToken("981267380-12qFKJHD2wFMvDFM6X1bg5RoAa5UygsgHcAqWjfI");
cb.setOAuthAccessTokenSecret("ouAo6irCebj9lz5VR5J0A3Rn4eGd4nasbYAx9lesQYk");

//Make the twitter object and prepare the query
Twitter twitter = new TwitterFactory(cb.build()).getInstance();
//query that searches twitter via the twitter API for specific term or phrase
Query query = new Query("a");
query.setRpp(100);

//Try making the query request to pull tweets
try {
  QueryResult result = twitter.search(query);
  ArrayList tweets = (ArrayList) result.getTweets();
  
  for (int i = 0; i < tweets.size(); i++){
    Tweet t = (Tweet) tweets.get(i);
    String user = t.getFromUser();
    
    String msg= t.getText();
    Date d = t.getCreatedAt();
    println("Tweet by " + user + " at " + d + ": " + msg);//prints tweets in console
    
    //break tweets into words
    String[] input = msg.split(" ");
    for (int j = 0; j < input.length; j=j+6) {
      //put each word into the words ArrayList
      words.add(input[j]);
    
    }
  };
}
catch (TwitterException te){
  println("Couldn't connect: " + te);// twitter is down :(
};

}

void draw() {

  background(0);
  fill(50);
  textAlign(LEFT);
  textSize(48);
  text("a u t o _ p o e t r y", 20,50);
  
  //draw a word from the list of words 
  int i = (frameCount % words.size());
  String word = words.get(i);


  //put it somewhere random on the stage, with a random size and color
  textAlign(CENTER);
  fill(255);
  textSize(144);
  text(word,width/2, 200);//word one
  
  word = words.get(i+2);//finds second word on array list
  text(word,width/2,350);//word two
  words.remove(i+2);
  i=0;//resets to 0
  //this method isnt elegant but it does get the job done
  word = words.get(i+12);//finds twelfth word on array list
  text(word,width/2,500);//word  three
   words.remove(i+12);
  i=0;//reset to zero
  
  word = words.get(i+18);//you get the point by now im sure
  text(word,width/2,650);//word four
   words.remove(i+18);
  i=0;
  
  word = words.get(i+24);
  text(word,width/2,800);//word five
   words.remove(i+24);
  i=0;
  
  word = words.get(i+30);
  text(word,width/2,950);//word six
   words.remove(i+30);
  i=0;
  
  
  textAlign(RIGHT);
  textSize(18);
  fill(50);
  text("poetry automatically generated by twitter + processing",1910, 1180);
  //delay is 1 minute in milliseconds. each poem is displayed for a minute, 
  //once the words are used they are deleted and the program selects new words. 
  delay(10000);
  }
  
  void mousePressed(){
 setup();// brings new set of tweets into the app. 
}


