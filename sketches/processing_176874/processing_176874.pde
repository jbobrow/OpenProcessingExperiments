
// Need G4P library
import g4p_controls.*;
import ddf.minim.*;
import ddf.minim.analysis.*;

Minim minim;
AudioPlayer song;
FFT fft;
int loopBegin, loopEnd;
boolean pause = false, mute=false;
String[] pList = new String[10];
byte[] filetest;

public void setup(){
  size(480, 320, JAVA2D);
  createGUI();
  customGUI();
  // Place your setup code here
  int num=1;
  //playList1.setItems(pList, num);
  minim = new Minim(this);
  
  for(int i=1; i<=1; i++){
    filetest = loadBytes(i+".mp3");
    if(filetest.length==0){
      println("Error! - "+i);
    } else {
      println("File OK! - "+i);
      //pList[i] = i+".mp3";
      //playList1.addItem(pList[i]);
    }
  }
  
  song = minim.loadFile("1.mp3");
  song.loop();
  float tmp = volume.getValueF();
  song.setGain(tmp-50);
  fft = new FFT( song.bufferSize(), song.sampleRate() );
}

public void draw(){
  background(255);
  // display song play information
  int p = song.position(); 
  int songLength = song.length();
  loopCnt.setText("Loop Count: " + song.loopCount());
  looping.setText("Looping: " + song.isLooping());
  playing.setText("Playing: " + song.isPlaying());
  position.setText("Position: " + p + " msec");
  tlength.setText("Length: " + songLength + " msec");
  gain.setText("Gain: " + song.getGain());
  pan.setText("Pan: " + song.getPan());
  loopCnt.setTextBold();
  looping.setTextBold();
  playing.setTextBold();
  position.setTextBold();
  tlength.setTextBold();
  gain.setTextBold();
  pan.setTextBold();
}

// Use this method to add additional statements
// to customise the GUI controls
public void customGUI(){

}
/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void volume_change1(GSlider source, GEvent event) { //_CODE_:volume:475867:
  println("volume - GSlider >> GEvent." + event + " @ " + millis());
  float tmp = volume.getValueF();
  song.setGain(tmp-50);
  //println(song.getGain());
} //_CODE_:volume:475867:

public void play_click1(GButton source, GEvent event) { //_CODE_:play:683585:
  println("play - GButton >> GEvent." + event + " @ " + millis());
  pause = !pause;
    if (pause) {
      song.pause();
      play.setText("Paused II");
    }
    else {
      song.play();
      play.setText("Play >");
    }
} //_CODE_:play:683585:

public void stop_click(GButton source, GEvent event) { //_CODE_:stop:541677:
  println("stop - GButton >> GEvent." + event + " @ " + millis());
  song.cue(0);
  pause = !pause;
  song.pause();
  play.setText("Stopped");
} //_CODE_:stop:541677:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  volume = new GSlider(this, 77, 232, 294, 56, 10.0);
  volume.setLimits(50.0, 0.0, 56.0);
  volume.setNumberFormat(G4P.DECIMAL, 2);
  volume.setOpaque(false);
  volume.addEventHandler(this, "volume_change1");
  play = new GButton(this, 130, 158, 80, 30);
  play.setText("Play >");
  play.setTextBold();
  play.addEventHandler(this, "play_click1");
  loopCnt = new GLabel(this, 5, 5, 130, 17);
  loopCnt.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  loopCnt.setText("Loop Count: ");
  loopCnt.setTextBold();
  loopCnt.setOpaque(false);
  looping = new GLabel(this, 5, 20, 130, 17);
  looping.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  looping.setText("Looping: ");
  looping.setTextBold();
  looping.setOpaque(false);
  playing = new GLabel(this, 5, 35, 130, 17);
  playing.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  playing.setText("Playing: ");
  playing.setTextBold();
  playing.setOpaque(false);
  position = new GLabel(this, 5, 50, 130, 17);
  position.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  position.setText("Position: ");
  position.setTextBold();
  position.setOpaque(false);
  tlength = new GLabel(this, 5, 65, 130, 17);
  tlength.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  tlength.setText("Length: ");
  tlength.setTextBold();
  tlength.setOpaque(false);
  gain = new GLabel(this, 5, 80, 130, 17);
  gain.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  gain.setText("Gain: ");
  gain.setTextBold();
  gain.setOpaque(false);
  pan = new GLabel(this, 5, 95, 130, 17);
  pan.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  pan.setText("Pan: ");
  pan.setTextBold();
  pan.setOpaque(false);
  stop = new GButton(this, 240, 158, 80, 30);
  stop.setText("Stop");
  stop.setTextBold();
  stop.addEventHandler(this, "stop_click");
}

// Variable declarations 
// autogenerated do not edit
GSlider volume; 
GButton play; 
GLabel loopCnt; 
GLabel looping; 
GLabel playing; 
GLabel position; 
GLabel tlength; 
GLabel gain; 
GLabel pan; 
GButton stop; 


