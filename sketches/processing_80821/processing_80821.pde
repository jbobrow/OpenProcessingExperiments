
float [ ] galPrice = {1.14,1.158,1.146,1.14,1.139,1.143,1.144,1.145,1.151,1.215,1.288,1.346,1.381,1.422,
1.433,1.434,1.429,1.429,1.422,1.418,1.414,1.408,1.402,1.392,1.394,1.391,1.39,1.392,
1.42,1.42,1.423,1.422,1.417,1.42,1.419,1.417,1.422,1.426,1.445,1.464,1.463,1.481,
1.478,1.475,1.477,1.461,1.446,1.438,1.428,1.424,1.458,1.496,1.509,1.509,1.51,1.514,
1.564,1.645,1.678,1.675,1.677,1.691,1.709,1.687,1.658,1.635,1.61,1.585,1.567,1.539,
1.509,1.5,1.492,1.487,1.492,1.514,1.505,1.495,1.498,1.542,1.552,1.549,1.552,1.587,
1.625,1.738,1.759,1.739,1.715,1.685,1.657,1.635,1.621,1.614,1.595,1.581,1.56,1.552,
1.556,1.548,1.535,1.53,1.542,1.543,1.562,1.621,1.655,1.678,1.683,1.684,1.688,1.705,
1.725,1.754,1.752,1.769,1.779,1.792,1.79,1.806,1.813,1.846,1.939,2.027,2.081,2.088,
2.074,2.048,2.012,1.989,1.958,1.961,1.971,1.96,1.934,1.92,1.914,1.922,1.909,1.9,
1.891,1.9,1.948,1.972,2.015,2.057,2.066,2.066,2.047,2.025,2.001,1.994,1.976,1.933,
1.899,1.88,1.858,1.86,1.886,1.912,1.963,1.964,1.949,1.939,1.941,2.003,2.067,2.12,
2.171,2.236,2.285,2.257,2.255,2.262,2.233,2.202,2.17,2.146,2.16,2.177,2.207,2.25,
2.265,2.363,2.369,2.358,2.352,2.402,2.599,2.654,2.646,3.252,3.111,2.914,2.906,3.016,
2.94,2.823,2.693,2.562,2.453,2.351,2.261,2.207,2.18,2.235,2.279,2.275,2.318,2.424,
2.434,2.449,2.447,2.429,2.376,2.31,2.29,2.341,2.387,2.55,2.549,2.634,2.743,2.854,
2.997,2.995,2.964,2.987,2.946,2.913,2.928,2.954,2.927,2.91,2.978,3.016,3.034,3.06,
3.071,3.091,3.068,2.993,2.92,2.815,2.716,2.59,2.445,2.365,2.303,2.268,2.239,2.246,
2.23,2.259,2.268,2.287,2.351,2.36,2.375,2.408,2.403,2.377,2.321,2.262,2.224,2.224,
2.248,2.301,2.394,2.546,2.588,2.603,2.629,2.727,2.812,2.896,2.893,2.974,3.016,
3.04,3.155,3.157,3.127,3.082,3.037,3.007,2.987,2.985,3.036,2.988,2.936,2.888,2.818,
2.798,2.764,2.776,2.796,2.8,2.834,2.833,2.813,2.798,2.853,2.897,3.036,3.14,3.147,
3.153,3.136,3.094,3.08,3.071,3.128,3.185,3.17,3.126,3.09,3.07,3.041,3.11,3.209,
3.229,3.255,3.315,3.305,3.32,3.348,3.399,3.547,3.663,3.673,3.775,3.857,4,4.033,
4.081,4.115,4.111,4.121,4.143,4.136,4.111,4.031,3.958,3.87,3.775,3.707,3.706,
3.682,3.88,3.793,3.734,3.616,3.298,3.012,2.761,2.528,2.349,2.189,2.029,1.936,1.833,
1.758,1.747,1.705,1.715,1.819,1.879,1.884,1.944,1.98,2.018,1.98,1.99,1.987,1.977,
2.007,2.093,2.09,2.095,2.108,2.103,2.115,2.28,2.361,2.461,2.528,2.61,2.687,2.729,
2.701,2.673,2.602,2.536,2.545,2.592,2.675,2.684,2.676,2.664,2.644,2.607,2.571,2.523,
2.484,2.486,2.592,2.719,2.743,2.731,2.705,2.704,2.701,2.713,2.684,2.664,2.67,2.72,
2.811,2.818,2.791,2.752,2.734,2.702,2.723,2.764,2.806,2.842,2.853,2.84,2.854,2.89,
2.889,2.899,2.942,2.96,2.927,2.861,2.794,2.758,2.73,2.758,2.768,2.744,2.728,2.719,
2.738,2.744,2.781,2.751,2.716,2.68,2.67,2.69,2.713,2.704,2.743,2.84,2.878,2.873,
2.861,2.893,2.948,2.965,2.961,3.048,3.076,3.077,3.133,3.149,3.166,3.181,3.192,3.176,
3.193,3.207,3.241,3.425,3.568,3.616,3.607,3.623,3.702,3.805,3.868,3.913,
3.994,4.018,4.021,3.929,3.852,3.808,3.765,3.727,3.67,3.64,3.718,3.776,3.805,3.818,
3.781,3.712,3.671,3.678,3.711,3.705,3.66,3.583,3.518,3.479,3.524,3.532,3.513,3.489,
3.499,3.453,3.405,3.378,3.38,3.346,3.344,3.395,3.487,
3.503,3.529,3.592,3.625,3.682,3.725,3.805,3.838,3.843,3.883,3.942,3.983,4.02,4,3.958,3.904,3.838,
3.778,3.713,3.652,3.595,3.533,3.484,3.427,3.377,3.437,3.483,3.568,3.577,3.678,
3.758,3.792,3.833,3.894,3.911,3.962,3.914,3.887,3.884,3.88,3.789,3.679, 3.625};

int [] red = {25,50,75,100,125,150,175,200,225,250,255};
int [] green={250,225,200,175,150,125,100,75,50,25,10};
int [] blue={15,40,65,90,115,140,165,190,215,240,255};

float x,y,x2,y2,c,r,g,b,o;
float rad= 0; // circle devided by weeks in a year
int i=0;

void setup() {
  size(700,700);
  background(0);
  smooth();
  x=width/2; // the rotation point
  y=height/2; //the rotation point
//  c= color(r,g,b); // the color of the stroke
  translate(width/2,height/2); //moves the origin to the center
  stroke(random(255), random(255), random(255),o);
  o=100;//opacity
}

void draw() {

  drawDataLine();
  textDates();
  circles();
}



void circles() {
  pushStyle();
  strokeWeight(1);
  stroke(255);
  noFill();
  ellipse(x, y, 2*width/10, 2*height/10);
  ellipse(x, y, 4*width/10, 4*height/10);
  ellipse(x, y, 6*width/10, 6*height/10);
  ellipse(x, y, 8*width/10, 8*height/10);
  popStyle();
  
}

void textDates() {
  pushStyle();
  fill(255);
  //text("U.S. National Average Price/Gal", 200, 20);
  text("$1.00", (width/2)-20, (height/2)-80);
  text("$2.00", (width/2)-20, (height/2)-150);
  text("$3.00", (width/2)-20, (height/2)-220);
  text("$4.00", (width/2)-20, (height/2)-290);
  popStyle();
  
  //These if statements set up the dates displayed on the lefthand side.
   if( i==1) {
     color c = color(red[0],green[0],blue[0],o); 
     fill(c);
     stroke(c);
     text("Gas prices in:" + 2002, 20,20,30);}
   if( i==52) {
      color c = color(red[1],green[1],blue[1],o); 
     fill(c);
     stroke(c);
     text("Gas prices in:" + 2003, 20,40,30);}
   if( i==104) {
     color c = color(red[2],green[2],blue[2],o); 
     fill(c);
     stroke(c);
    text("Gas prices in:" + 2004, 20,60,30);}
   if( i==156) {
     color c = color(red[3],green[3],blue[3],o); 
     fill(c);
     stroke(c); 
   text("Gas prices in:" + 2005, 20,80,30);  }
   if( i==208) {
     color c = color(red[4],green[4],blue[4],o); 
     fill(c);
     stroke(c);
    text("Gas prices in:" + 2006, 20,100,30);}
   if( i==260) {
     color c = color(red[5],green[5],blue[5],o); 
     fill(c);
     stroke(c);
    text("Gas prices in:" + 2007, 20,120,30);  }
   if( i==312) {
     color c = color(red[6],green[6],blue[6],o); 
     fill(c);
     stroke(c);
    text("Gas prices in:" + 2008, 20,140,30);  }
   if( i==364) {
     color c = color(red[7],green[7],blue[7],o); 
     fill(c);
     stroke(c);
    text("Gas prices in:" + 2009, 20,160,30);  }
   if( i==416) {
     color c = color(red[8],green[8],blue[8],o); 
     fill(c);
     stroke(c);
   text("Gas prices in:" + 2010, 20,180,30);}
   if( i==468) {
     color c = color(red[9],green[9],blue[9],o); 
     fill(c);
     stroke(c);
   text("Gas prices in:" + 2011, 20,200,30);}
   if( i==520) {
     color c = color(red[10],green[10],blue[10],o); 
     fill(c);
     stroke(c);
   text("Gas prices in:" + 2012, 20,220,30);}
   
}

void drawDataLine() {
  strokeWeight(5);
//  for( int i=0; i< galPrice.length; i++) {
    rad = rad + (.7);// divides one revolution into 52 weeks
 
   if (i< galPrice.length-1) {
     i++;
    //draw a line thats length is directly related to the price of gas/week 
    //displayed around a central point
    line(x,y, (x+(galPrice[i]*width/10)*cos( radians(rad))), y+(galPrice[i]*height/10)*sin(radians(rad)));
    //rectMode(CORNER);
   // rect(x,y, (x+(galPrice[i]*width/10)*cos( radians(rad))), y+(galPrice[i]*height/10)*sin(radians(rad)));
   // point((x+(galPrice[i]*width/10)*cos( radians(rad))), y+(galPrice[i]*height/10)*sin(radians(rad)));
fill(0);
ellipse(x,y,.1*width,.1*height);
}}

   void keyPressed() {
  if (key=='p')
  {saveFrame("hw12.jpg");}}
