
import g4p_controls.*;

PGraphics pg;
PGraphics pg1;
boolean styleDot;


void setup(){
  size(800,600);
  createGUI();
  pg = createGraphics(100, 100);
  pg1 = createGraphics(100, 100);
  cbDots.setSelected(true);
  styleDot = cbDots.isSelected();
}

color colorFromHSBA(float H, float S, float V, float A){
  float Hp = (H % 360.0);
  float Sp = (S % 256.0) / 255.0;
  float Vp = (V % 256.0) / 255.0;
  float C = Vp * Sp;
  float X = C * (1 - abs((Hp/60.0) % 2.0 - 1.0));
  float m = Vp - C;
  float Rp = 0.0, Gp = 0.0, Bp = 0.0;
  if(  0.0 <= Hp && Hp < 60.0){Rp = C; Gp = X; Bp = 0;} 
  if( 60.0 <= Hp && Hp <120.0){Rp = X; Gp = C; Bp = 0;} 
  if(120.0 <= Hp && Hp <180.0){Rp = 0; Gp = C; Bp = X;} 
  if(180.0 <= Hp && Hp <240.0){Rp = 0; Gp = X; Bp = C;} 
  if(240.0 <= Hp && Hp <300.0){Rp = X; Gp = 0; Bp = C;} 
  if(300.0 <= Hp && Hp <360.0){Rp = C; Gp = 0; Bp = X;} 
  color c = color((Rp+m)*255,(Gp+m)*255,(Bp+m)*255, A);
  return c;
}

void draw(){
  pg.beginDraw();
  //pg.background(102);
  pg.stroke(colorFromHSBA(frameCount%360,230,250,10));
  pg.fill(colorFromHSBA(frameCount%360,230,250,10));
  pg.rect(0, 0, mouseX, mouseY);
  if(styleDot) {pg.stroke(colorFromHSBA(frameCount%360,230,250,255));pg.ellipse(mouseX, mouseY, 5, 5);ellipse(mouseX, mouseY, 5, 5);}
  pg.endDraw();
  image(pg, 50, 50);
  pg1.beginDraw();
  //pg.background(102);
  pg1.stroke(colorFromHSBA(frameCount%360,230.0,250.0,255.0));
  pg1.fill(colorFromHSBA(frameCount%360,230.0,250.0,255.0));
  pg1.rect(0, 0, mouseX, mouseY);
  pg1.endDraw();
  image(pg1, 150, 50);
}
/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void cbDots_clicked1(GCheckbox source, GEvent event) { //_CODE_:cbDots:887904:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
  styleDot = cbDots.isSelected();
} //_CODE_:cbDots:887904:

public void kValue_turn1(GKnob source, GEvent event) { //_CODE_:kValue:390557:
  println("kValue - GKnob >> GEvent." + event + " @ " + millis() + " value: " + kValue.getValueF());
} //_CODE_:kValue:390557:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:567269:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  background(kValue.getValueF() * 255);
} //_CODE_:button1:567269:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  cbDots = new GCheckbox(this, 630, 60, 120, 20);
  cbDots.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  cbDots.setText("dots");
  cbDots.setOpaque(false);
  cbDots.addEventHandler(this, "cbDots_clicked1");
  kValue = new GKnob(this, 630, 90, 60, 60, 0.8);
  kValue.setTurnRange(110, 70);
  kValue.setTurnMode(GKnob.CTRL_ANGULAR);
  kValue.setShowArcOnly(false);
  kValue.setOverArcOnly(false);
  kValue.setIncludeOverBezel(false);
  kValue.setShowTrack(true);
  kValue.setLimits(0.5, 0.0, 1.0);
  kValue.setShowTicks(true);
  kValue.setOpaque(false);
  kValue.addEventHandler(this, "kValue_turn1");
  button1 = new GButton(this, 630, 160, 80, 30);
  button1.setText("set bg color");
  button1.addEventHandler(this, "button1_click1");
}

// Variable declarations 
// autogenerated do not edit
GCheckbox cbDots; 
GKnob kValue; 
GButton button1; 



