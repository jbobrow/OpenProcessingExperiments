
int i, j, k;//制御変数
float x, y, a, b, c, d, e, f, g, h, l, m, z, w;//ランダム用の変数を作成
size(600, 300);//600×300の画面を構成
background(0);//背景を黒にする

/***************************************************************
 左の「安定」の画面。
 スケッチしたバルケンクロイツ風にする。
 スケッチしたように見せるにはランダムに連続した線を作成していく。
 ランダムに作成するにはrandomコマンドを使用。
 連続した線は  line(x, y, a, b)を繰り返す際に、
 x=a,y=bの代入を最後に記述することで可能。
 ***************************************************************/

//背景のギザギザ白*********
strokeWeight(1) ;//線の太さを指定
x=random(300);//0～300の間で数値をランダムにとり、Xに代入。
y=random(300);//0～300の間で数値をランダムにとり、Yに代入。
for (i=0; i<5000; i++) {
  a=random(300);
  b=random(300);
  stroke(255);
  line(x, y, a, b);
  x=a;
  y=b;
}
//-----------------------------

//真ん中の十字------------------
j=400;//真ん中十字の繰り返し回数
x=200;
y=150;
for (i=0; i<j; i++) {
  a=random(300);
  b=random(120, 180);
  stroke(0);
  if ((y>=120)&&(y<=180)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}

x=150; 
y=200;
for (i=0; i<j; i++) {
  a=random(120, 180);
  b=random(300);
  stroke(0);
  if ((x>=120)&&(x<=180)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
//-----------------------------

//その他の直線----------------------

k=100;//他の直線の直線の繰り返し回数

//右上--------------------------
x=100; 
y=100;
for (i=0; i<k; i++) {
  a=random(95, 105);
  b=random(110);
  stroke(0);
  if ((x>=90)&&(x<=110)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
x=100; 
y=100;
for (i=0; i<k; i++) {
  a=random(110);
  b=random(95, 105);
  stroke(0);
  if ((y>=90)&&(y<=110)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}//------------------------------
//右下----------------------------
x=100; 
y=200;
for (i=0; i<k; i++) {
  a=random(110);
  b=random(195, 205);
  stroke(0);
  if ((y>=190)&&(y<=210)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
x=100; 
y=200;
for (i=0; i<k; i++) {
  a=random(95, 105);
  b=random(190, 300);
  stroke(0);
  if ((x>=90)&&(x<=110)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
//-------------------------------
//左上----------------------------
x=200; 
y=100;
for (i=0; i<k; i++) {
  a=random(195, 205);
  b=random(110);
  stroke(0);
  if ((x>=190)&&(x<=210)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
x=200; 
y=100;
for (i=0; i<k; i++) {
  a=random(190, 300);
  b=random(95, 105);
  stroke(0);
  if ((y>=90)&&(y<=110)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
//--------------------------------
//右下----------------------------
x=200; 
y=200;
for (i=0; i<k; i++) {
  a=random(190, 300);
  b=random(195, 205);
  stroke(0);
  if ((y>=190)&&(y<=210)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
x=200; 
y=200;
for (i=0; i<k; i++) {
  a=random(195, 205);
  b=random(190, 300);
  stroke(0);
  if ((x>=190)&&(x<=210)) {//範囲指定
    line(x, y, a, b);
    x=a;
    y=b;
  }
}
//----------------------------------

/**********************************************************************************
 右の「変動」の画面。
 常に情報が動き続けるサイバー空間をイメージ。
 左のランダムに連続した線を作成していく仕組みを使いつつ
 線の終わりは丸で終わるように設定。
 また、情報が動いているように線の透明度がだんだんハッキリさせている
 さらに線や丸の後ろに透明度が薄い色を同じ線の配置することで、光っているように見せる
 **********************************************************************************/

//中央の輝きを描写---------
for (i=0; i<1000; i++) {
  x=random(300);
  y=random(300);
  z=random(300);
  w=random(255);
  fill(255, w, w, 255);
  strokeWeight(3);
  stroke(251, 255, 30, 15);
  line(450, 150, 300+x, y);
}
//---------------------------

x=random(301, 600);  //一本目の線用
y=random(300); //一本目の線用
e=random(301, 600);//二本目の線用  
f=random(300);//二本目の線用  
g=random(301, 600);//三本目の線用   
h=random(300);//三本目の線用 
for (i=0; i<100; i++) {
  strokeWeight(3) ;
  a=random(301, 600); //一本目の線用
  c=random(301, 600); //二本目の線用  
  l=random(301, 600);//三本目の線用  
  b=random(300);//一本目の線用  
  d=random(300);//二本目の線用  
  m=random(300);//三本目の線用  

  //一本目の線の描写--------
  stroke(116, 169, 214, i);
  line(x, y, a, b);  
  //------------------------

  //二本目の線の描写--------
  stroke(255, 255, 255, i);
  line(e, f, c, d);  
  //------------------------

  //三本目の線の描写--------
  stroke(224, 255, 255, i);
  line(g, h, l, m);  
  //-------------------------


  strokeWeight(1) ;
  stroke(255, i);
  line(x, y, a, b);//光っているように見せる一本目の線用
  line(e, f, c, d);//光っているように見せる二本目の線用
  line(g, h, l, m);//光っているように見せる三本目の線用
  x=a;//一本目の線用
  y=b;//一本目の線用
  e=c;//二本目の線用
  f=d;//二本目の線用
  g=l;//三本目の線用
  h=m;//三本目の線用
}
//一本目の線の終わりの円の描写----
fill(116, 169, 214, 100);
ellipse(x, y, 10, 10);
fill(255, 200);
ellipse(x, y, 5, 5);
//--------------------------

//二本目の線の終わりの円の描写----
fill(116, 169, 214, 100);
ellipse(e, f, 10, 10);
fill(255, 200);
ellipse(e, f, 5, 5);
//--------------------------

//三本目の線の終わりの円の描写----
fill(116, 169, 214, 100);
ellipse(g, h, 10, 10);
fill(255, 200);
ellipse(g, h, 5, 5);
//--------------------------



