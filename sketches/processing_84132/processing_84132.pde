
import processing.video.*;

float xa;
float ya;
float xb;
float yb;
float xc;
float yc;
float xd;
float yd;
float xe;
float ye;
float xf;
float yf;
float xg;
float yg;
float xh;
float yh;
float xi;
float yi;
float xj;
float yj;
float xk;
float yk;
float xl;
float yl;
float xm;
float ym;
float xn;
float yn;
float xo;
float yo;
float xp;
float yp;
float xq;
float yq;
float xr;
float yr;
float xs;
float ys;
float xt;
float yt;
float xu;
float yu;
float xv;
float yv;
float xw;
float yw;
float xx;
float yx;

Capture video;

void setup() {
  size(1920,1080);
  smooth();
  background(255);
  
  xa = width/2;
  ya = height/2;
   xb = width/2;
  yb = height/2;
   xc = width/2;
  yc = height/2;
   xd = width/2;
  yd = height/2;
   xe = width/2;
  ye = height/2;
   xf = width/2;
  yf = height/2;
    xg = width/2;
  yg = height/2;
   xh = width/2;
  yh = height/2;
   xi = width/2;
  yi = height/2;
   xj = width/2;
  yj = height/2;
   xk = width/2;
  yk = height/2;
   xl = width/2;
  yl = height/2;
   xm = width/2;
  ym = height/2;
   xn = width/2;
  yn = height/2;
    xo = width/2;
  yo = height/2;
   xp = width/2;
  yp = height/2;
   xq = width/2;
  yq = height/2;
   xr = width/2;
  yr = height/2;
   xs = width/2;
  ys = height/2;
   xt = width/2;
  yt = height/2;
   xu = width/2;
  yu = height/2;
   xv = width/2;
  yv = height/2;
    xw = width/2;
  yw = height/2;
   xx = width/2;
  yx = height/2;
  video = new Capture(this,width,height,15); 
}

void draw() {
  if (video.available()) {
    video.read();
  }
  video.loadPixels();
  
  float newx1 = constrain(xa + random(-20,20),0,width-1);
  float newy1 = constrain(ya + random(-20,20),0,height-1);
  float newx2 = constrain(xb+ random(-20,20),0,width-1);
  float newy2 = constrain(yb + random(-20,20),0,height-1);
  float newx3 = constrain(xc + random(-20,20),0,width-1);
  float newy3 = constrain(yc + random(-20,20),0,height-1);
  float newx4 = constrain(xd+ random(-20,20),0,width-1);
  float newy4 = constrain(yd + random(-20,20),0,height-1);
   float newx5 = constrain(xe + random(-20,20),0,width-1);
  float newy5 = constrain(ye + random(-20,20),0,height-1);
  float newx6 = constrain(xf+ random(-20,20),0,width-1);
  float newy6 = constrain(yf + random(-20,20),0,height-1);
  float newx7 = constrain(xg + random(-20,20),0,width-1);
  float newy7 = constrain(yg + random(-20,20),0,height-1);
  float newx8 = constrain(xh+ random(-20,20),0,width-1);
  float newy8 = constrain(yh + random(-20,20),0,height-1);
   float newx9 = constrain(xi + random(-20,20),0,width-1);
  float newy9 = constrain(yi + random(-20,20),0,height-1);
  float newx10 = constrain(xj+ random(-20,20),0,width-1);
  float newy10 = constrain(yj + random(-20,20),0,height-1);
  float newx11 = constrain(xk + random(-20,20),0,width-1);
  float newy11 = constrain(yk + random(-20,20),0,height-1);
  float newx12 = constrain(xl+ random(-20,20),0,width-1);
  float newy12 = constrain(yl + random(-20,20),0,height-1);
   float newx13 = constrain(xm + random(-20,20),0,width-1);
  float newy13 = constrain(ym + random(-20,20),0,height-1);
  float newx14 = constrain(xn+ random(-20,20),0,width-1);
  float newy14 = constrain(yn + random(-20,20),0,height-1);
  float newx15 = constrain(xo + random(-20,20),0,width-1);
  float newy15 = constrain(yo + random(-20,20),0,height-1);
  float newx16 = constrain(xp+ random(-20,20),0,width-1);
  float newy16 = constrain(yp + random(-20,20),0,height-1);
   float newx17 = constrain(xq + random(-20,20),0,width-1);
  float newy17 = constrain(yq + random(-20,20),0,height-1);
  float newx18 = constrain(xr+ random(-20,20),0,width-1);
  float newy18 = constrain(yr + random(-20,20),0,height-1);
  float newx19 = constrain(xs + random(-20,20),0,width-1);
  float newy19 = constrain(ys + random(-20,20),0,height-1);
  float newx20 = constrain(xt+ random(-20,20),0,width-1);
  float newy20 = constrain(yt + random(-20,20),0,height-1);
   float newx21 = constrain(xu + random(-20,20),0,width-1);
  float newy21 = constrain(yu + random(-20,20),0,height-1);
  float newx22 = constrain(xv+ random(-20,20),0,width-1);
  float newy22 = constrain(yv + random(-20,20),0,height-1);
  float newx23 = constrain(xw + random(-20,20),0,width-1);
  float newy23 = constrain(yw + random(-20,20),0,height-1);
  float newx24 = constrain(xx+ random(-20,20),0,width-1);
  float newy24 = constrain(yx + random(-20,20),0,height-1);
  
  int midx1 = int((newx1 + xa) / 2);
  int midy1 = int((newy1 + ya) / 2);
   int midx2 = int((newx2 + xb) / 2);
  int midy2 = int((newy2 + yb) / 2);
  int midx3 = int((newx3 + xc) / 2);
  int midy3 = int((newy3 + yc) / 2);
   int midx4 = int((newx4 + xd) / 2);
  int midy4 = int((newy4 + yd) / 2);
  int midx5 = int((newx5 + xe) / 2);
  int midy5 = int((newy5 + ye) / 2);
   int midx6 = int((newx6 + xf) / 2);
  int midy6 = int((newy6 + yf) / 2);
  int midx7 = int((newx7 + xg) / 2);
  int midy7 = int((newy7 + yg) / 2);
   int midx8 = int((newx8 + xh) / 2);
  int midy8 = int((newy8 + yh) / 2);
   int midx9 = int((newx9 + xi) / 2);
  int midy9 = int((newy9 + yi) / 2);
   int midx10 = int((newx10 + xj) / 2);
  int midy10 = int((newy10 + yj) / 2);
  int midx11 = int((newx11 + xk) / 2);
  int midy11 = int((newy11 + yk) / 2);
   int midx12 = int((newx12 + xl) / 2);
  int midy12 = int((newy12 + yl) / 2);
  int midx13 = int((newx13 + xm) / 2);
  int midy13 = int((newy13 + ym) / 2);
   int midx14 = int((newx14 + xn) / 2);
  int midy14 = int((newy14 + yn) / 2);
  int midx15 = int((newx15 + xo) / 2);
  int midy15 = int((newy15 + yo) / 2);
   int midx16 = int((newx16 + xp) / 2);
  int midy16 = int((newy16 + yp) / 2);
   int midx17 = int((newx17 + xq) / 2);
  int midy17 = int((newy17 + yq) / 2);
   int midx18 = int((newx18 + xr) / 2);
  int midy18 = int((newy18 + yr) / 2);
  int midx19 = int((newx19 + xs) / 2);
  int midy19 = int((newy19 + ys) / 2);
   int midx20 = int((newx20 + xt) / 2);
  int midy20 = int((newy20 + yt) / 2);
  int midx21 = int((newx21 + xu) / 2);
  int midy21 = int((newy21 + yu) / 2);
   int midx22 = int((newx22 + xv) / 2);
  int midy22 = int((newy22 + yv) / 2);
  int midx23 = int((newx23 + xw) / 2);
  int midy23 = int((newy23 + yw) / 2);
   int midx24 = int((newx24 + xx) / 2);
  int midy24  = int((newy24 + yx) / 2);
  

  color c1 = video.pixels[(width-1-midx1) + midy1*video.width];
  color c2 = video.pixels[(width-2-midx2) + midy2*video.width];
   color c3 = video.pixels[(width-3-midx3) + midy3*video.width];
  color c4 = video.pixels[(width-4-midx4) + midy4*video.width];
  color c5 = video.pixels[(width-5-midx5) + midy5*video.width];
  color c6 = video.pixels[(width-6-midx6) + midy6*video.width];
   color c7 = video.pixels[(width-7-midx7) + midy7*video.width];
  color c8 = video.pixels[(width-8-midx8) + midy8*video.width];
  color c9 = video.pixels[(width-9-midx9) + midy9*video.width];
  color c10 = video.pixels[(width-10-midx10) + midy10*video.width];
   color c11 = video.pixels[(width-11-midx11) + midy11*video.width];
  color c12 = video.pixels[(width-12-midx12) + midy12*video.width];
  color c13 = video.pixels[(width-13-midx13) + midy13*video.width];
  color c14 = video.pixels[(width-14-midx14) + midy14*video.width];
   color c15 = video.pixels[(width-15-midx15) + midy15*video.width];
  color c16 = video.pixels[(width-16-midx16) + midy16*video.width];
   color c17 = video.pixels[(width-17-midx17) + midy17*video.width];
  color c18 = video.pixels[(width-18-midx18) + midy18*video.width];
   color c19 = video.pixels[(width-19-midx19) + midy19*video.width];
  color c20 = video.pixels[(width-20-midx20) + midy20*video.width];
  color c21 = video.pixels[(width-21-midx21) + midy21*video.width];
  color c22 = video.pixels[(width-22-midx22) + midy22*video.width];
   color c23 = video.pixels[(width-23-midx23) + midy23*video.width];
  color c24 = video.pixels[(width-24-midx24) + midy24*video.width];
  
  

  stroke(c1);
  strokeWeight(13);
  line(xa,ya,newx1,newy1);
    stroke(c2);
  strokeWeight(13);
  line(xb,yb,newx2,newy2);
  stroke(c3);
  strokeWeight(13);
  line(xc,yc,newx3,newy3);
    stroke(c4);
  strokeWeight(13);
  line(xd,yd,newx4,newy4);
   stroke(c5);
  strokeWeight(13);
  line(xe,ye,newx5,newy5);
    stroke(c6);
  strokeWeight(13);
  line(xf,yf,newx6,newy6);
  stroke(c7);
  strokeWeight(13);
  line(xg,yg,newx7,newy7);
    stroke(c8);
  strokeWeight(13);
  line(xh,yh,newx8,newy8);
  stroke(c9);
  strokeWeight(13);
  line(xi,yi,newx9,newy9);
    stroke(c10);
  strokeWeight(13);
  line(xj,yj,newx10,newy10);
  stroke(c11);
  strokeWeight(13);
  line(xk,yk,newx11,newy11);
    stroke(c12);
  strokeWeight(13);
  line(xl,yl,newx12,newy12);
   stroke(c13);
  strokeWeight(13);
  line(xm,ym,newx13,newy13);
    stroke(c14);
  strokeWeight(13);
  line(xn,yn,newx14,newy14);
  stroke(c15);
  strokeWeight(13);
  line(xo,yo,newx15,newy15);
    stroke(c16);
  strokeWeight(13);
  line(xp,yp,newx16,newy16);
   stroke(c17);
  strokeWeight(13);
  line(xq,yq,newx17,newy17);
    stroke(c18);
  strokeWeight(13);
  line(xr,yr,newx18,newy18);
  stroke(c19);
  strokeWeight(13);
  line(xs,ys,newx19,newy19);
    stroke(c20);
  strokeWeight(13);
  line(xt,yt,newx20,newy20);
   stroke(c21);
  strokeWeight(13);
  line(xu,yu,newx21,newy21);
    stroke(c22);
  strokeWeight(13);
  line(xv,yv,newx22,newy22);
  stroke(c23);
  strokeWeight(13);
  line(xw,yw,newx23,newy23);
    stroke(c24);
  strokeWeight(13);
  line(xx,yx,newx24,newy24);
  

  xa = newx1;
  ya = newy1;
    xb = newx2;
  yb = newy2;
   xc = newx3;
  yc = newy3;
    xd = newx4;
  yd = newy4;
 xe = newx5;
  ye = newy5;
    xf = newx6;
  yf = newy6;
   xg = newx7;
  yg = newy7;
    xh = newx8;
  yh = newy8;
  xi = newx9;
  yi = newy9;
    xj = newx10;
  yj = newy10;
   xk = newx11;
  yk = newy11;
    xl = newx12;
  yl = newy12;
 xm = newx13;
  ym = newy13;
    xn = newx14;
  yn = newy14;
   xo = newx15;
  yo = newy15;
    xp = newx16;
  yp = newy16;
  xq = newx17;
  yq = newy17;
    xr = newx18;
  yr = newy18;
   xs = newx19;
  ys = newy19;
    xt = newx20;
  yt = newy20;
 xu = newx21;
  yu = newy21;
    xv = newx22;
  yv = newy22;
   xw = newx23;
  yw = newy23;
    xx = newx24;
  yx = newy24;
}

