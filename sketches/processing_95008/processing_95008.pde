
float xo;
float yo;
float zoom = 1;
float angle = 0;

void setup() {
  size(440, 520);
  xo = width/2;
  yo = (height/2)-40;
  smooth();
}

void draw(){
  background(255);
  translate(xo, yo);
  scale(zoom);
  rotate(angle);
  fill(255, 0, 0);
  ellipse(0, 0, 10, 10);
  stroke(0);
  strokeWeight(1);
  //vertical lines
  line(-200, -200, -200, -20);
  line(-200, 60, -200, 80);
  line(-200, 140, -200, 160);
  line(-180, -180, -180, -120);
  line(-180, -100, -180, 20);
  line(-180, 100, -180, 140);
  line(-160, -160, -160, -100);
  line(-160, -60, -160, 20);
  line(-160, 80, -160, 140);
  line(-140, -200, -140, -180);
  line(-140, -140, -140, -100);
  line(-140, -40, -140, 0);
  line(-140, 100, -140, 140);
  line(-120, -220, -120, -180);
  line(-120, -160, -120, -80);
  line(-120, -20, -120, 0);
  line(-120, 80, -120, 180);
  line(-120, 200, -120, 220);
  line(-100, -200, -100, -60);
  line(-100, -40, -100, 0);
  line(-100, 80, -100, 120);
  line(-100, 140, -100, 180);
  line(-100, 200, -100, 220);
  line(-80, -200, -80, -140);
  line(-80, -120, -80, -80);
  line(-80, -60, -80, -20);
  line(-80, 80, -80, 100);
  line(-80, 140, -80, 160);
  line(-60, -180, -60, -140);
  line(-60, -120, -60, -80);
  line(-60, -60, -60, -20);
  line(-60, 100, -60, 120);
  line(-40, -180, -40, -140);
  line(-40, -40, -40, -20);
  line(-40, 0, -40, 20);
  line(-40, 40, -40, 100);
  line(-40, 120, -40, 140);
  line(-40, 200, -40, 220);
  line(-20, -160, -20, -120);
  line(-20, -60, -20, -20);
  line(-20, 0, -20, 80);
  line(-20, 160, -20, 200);
  line(0, -200, 0, -180);
  line(0, -140, 0, -100);
  line(0, 20, 0, 80);
  line(0, 160, 0, 180);
  line(20, -160, 20, -100);
  line(20, -80, 20, 0);
  line(20, 40, 20, 100);
  line(40, -160, 40, -100);
  line(40, -80, 40, -40);
  line(40, 40, 40, 100);
  line(40, 180, 40, 200);
  line(60, -200, 60, -100);
  line(60, -60, 60, -20);
  line(60, 20, 60, 120);
  line(60, 160, 60, 180);
  line(80, -140, 80, -120);
  line(80, -80, 80, -20);
  line(80, 0, 80, 40);
  line(80, 60, 80, 140);
  line(100, -100, 100, -40);
  line(100, -20, 100, 0);
  line(100, 80, 100, 160);
  line(100, 180, 100, 200);
  line(120, -200, 120, -180);
  line(120, -160, 120, -120);
  line(120, -100, 120, -60);
  line(120, 20, 120, 40);
  line(120, 80, 120, 180);
  line(140, -180, 140, -60);
  line(140, 0, 140, 40);
  line(140, 60, 140, 160);
  line(160, -200, 160, -40);
  line(160, 0, 160, 20);
  line(160, 40, 160, 100);
  line(160, 140, 160, 160);
  line(160, 180, 160, 220);
  line(180, -200, 180, -40);
  line(180, 20, 180, 40);
  line(180, 80, 180, 120);
  line(180, 160, 180, 220);
  line(200, -220, 200, -140);
  line(200, -100, 200, -40);
  line(200, 20, 200, 60);
  line(200, 100, 200, 120);
  line(200, 140, 200, 220);
  line(0, -20, 0, -80);
  line(-60, -80, -60, -120);
  //horizontal lines
  line(0, -80, -60, -80);
  line(-200, -200, -140, -200);
  line(-100, -200, 0, -200);
  line(20, -200, 160, -200);
  line(180, -200, 200, -200);
  line(-160, -180, -120, -180);
  line(-40, -180, 100, -180);
  line(120, -180, 140, -180);
  line(-160, -160, -120, -160);
  line(20, -160, 40, -160);
  line(60, -160, 120, -160);
  line(-60, -140, -40, -140);
  line(-20, -140, 0, -140);
  line(80, -140, 100, -140);
  line(-200, -120, -180, -120);
  line(-100, -120, -80, -120);
  line(-60, -120, -20, -120);
  line(80, -120, 120, -120);
  line(180, -120, 200, -120);
  line(-160, -100, -140, -100);
  line(-40, -100, 0, -100);
  line(20, -100, 40, -100);
  line(60, -100, 120, -100);
  line(180, -100, 200, -100);
  line(-180, -80, -120, -80);
  line(-80, -120, -80, -80);
  line(20, -80, 40, -80);
  line(60, -80, 80, -80);
  line(-160, -60, -100, -60);
  line(-60, -60, -20, -60);
  line(-140, -40, -100, -40);
  line(100, -40, 160, -40);
  line(180, -40, 200, -40);
  line(-200, -20, -180, -20);
  line(-80, -20, -60, -20);
  line(-40, -20, -20, -20);
  line(0, -20, 60, -20);
  line(80, -20, 160, -20);
  line(180, -20, 220, -20);
  line(-220, 0, -180, 0);
  line(-120, 0, -60, 0);
  line(-40, 0, -20, 0);
  line(20, 0, 80, 0);
  line(140, 0, 160, 0);
  line(-200, 20, -180, 20);
  line(-160, 20, -40, 20);
  line(0, 20, 60, 20);
  line(100, 20, 120, 20);
  line(160, 20, 200, 20);
  line(-220, 40, -40, 40);
  line(20, 40, 40, 40);
  line(80, 40, 120, 40);
  line(140, 40, 160, 40);
  line(-220, 60, -200, 60);
  line(-140, 60, -60, 60);
  line(80, 60, 140, 60);
  line(180, 60, 200, 60);
  line(-200, 80, -180, 80);
  line(-160, 80, -120, 80);
  line(-100, 80, -80, 80);
  line(-20, 80, 0, 80);
  line(100, 80, 120, 80);
  line(-220, 100, -180, 100);
  line(-60, 100, 40, 100);
  line(140, 100, 160, 100);
  line(180, 100, 200, 100);
  line(-100, 120, -60, 120);
  line(-40, 120, 60, 120);
  line(160, 120, 180, 120);
  line(-200, 140, -180, 140);
  line(-160, 140, -140, 140);
  line(-100, 140, -60, 140);
  line(-40, 140, 80, 140);
  line(160, 140, 200, 140);
  line(-200, 160, -140, 160);
  line(-80, 160, -60, 160);
  line(0, 160, 40, 160);
  line(60, 160, 100, 160);
  line(140, 160, 160, 160);
  line(-220, 180, -120, 180);
  line(-100, 180, -40, 180);
  line(0, 180, 40, 180);
  line(60, 180, 100, 180);
  line(120, 180, 160, 180);
  line(-200, 200, -120, 200);
  line(-100, 200, -40, 200);
  line(-20, 200, 80, 200);
  line(100, 200, 140, 200);
  line(-220, -220, 220, -220);
  line(-220, -220, -220, 220);
  line(219, -220, 219, 220);
  line(-220, 220, 160, 220);
  line(180, 219, 220, 219);
  if(dist(xo, yo, mouseX, mouseY) <10){
    stroke(255, 0, 0);
    strokeWeight(3);
    line(0, 0, -10, 0);
    line(-10, 0, -10, -70);
    line(-10, -70, -70, -70);
    line(-70, -70, -70, -130);
    line(-70, -130, -30, -130);
    line(-30, -130, -30, -170);
    line(-30, -170, 50, -170);
    line(50, -170, 50, -90);
    line(50, -90, 90, -90);
    line(90, -90, 90, -30);
    line(90, -30, 170, -30);
    line(170, -30, 170, -210);
    line(170, -210, -110, -210);
    line(-110, -210, -110, -70);
    line(-110, -70, -170, -70);
    line(-170, -70, -170, 30);
    line(-170, 30, -30, 30);
    line(-30, 30, -30, 90);
    line(-30, 90, 10, 90);
    line(10, 90, 10, 30);
    line(10, 30, 50, 30);
    line(50, 30, 50, 110);
    line(50, 110, -50, 110);
    line(-50, 110, -50, 150);
    line(-50, 150, 90, 150);
    line(90, 150, 90, 70);
    line(90, 70, 130, 70);
    line(130, 70, 130, 170);
    line(130, 170, 170, 170);
    line(170, 170, 170, 220);
  }
  textSize(9);
  fill(0);
  text("Press up arrow to zoom in and down arrow to zoom out\nPress left and right arrows to rotate\nClick and drag mouse to drag image\nPress space bar to reset\nHover over red circle to show solution", -210, 240);
  }

void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      zoom += .03;
    } else if (keyCode == DOWN) {
      zoom -= .03;
    } else if (keyCode == RIGHT) {
      angle += .03;
    } else if (keyCode == LEFT) {
      angle -= .03;
    }
  }
  if (key == ' ') {
    angle = 0;
    zoom = 1;
    xo = width/2;
    yo = (height/2)-40;
  }
}

void mouseDragged() {
  xo = xo + (mouseX - pmouseX);
  yo = yo + (mouseY - pmouseY);
}
