
import ddf.minim.*;
import ddf.minim.effects.*;

Minim minim;
AudioPlayer groove;
AudioPlayer Prov;
AudioPlayer Watchout;
AudioPlayer ohshit;
AudioPlayer loser;

/////////////////////////////////////////////////////////////////////////////
// Color Int/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

int r = 150;
int g = 0;
int b = 0;

/////////////////////////////////////////////////////////////////////////////
//Ball Int///////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

float ballX = 0;
float ballY = 0;
float ballXSpeed = 3;
float ballYSpeed = 5;
float ballSize = 25;

/////////////////////////////////////////////////////////////////////////////
///Bottom Rectangle//////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

int BotRectH = 10;
int BotRectW = 70;
int BotRectPosX = 0;
int BotRectPosY = 980;

/////////////////////////////////////////////////////////////////////////////
//Squares////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

int TopLeftClicked = 0;
int TopRightClicked = 0;
int BottomLeftClicked = 0;
int BottomRightClicked = 0;

/////////////////////////////////////////////////////////////////////////////////////
////Set up  /////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

int TopLeftSqX = 0;
int TopLeftSqY = 0;
int TopRightSqX =500;
int TopRightSqY =0;
int BotLeftSqX =0;
int BotLeftSqY =500;
int BotRightSqX =500;
int BotRightSqY =500;
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
void setup () {
  size (1000, 1000);
  smooth();
 minim = new Minim(this);
  groove = minim.loadFile("itgetsthepeoplegoing.mp3", 2048);
  
 
  // background(r, g, b);
   frameRate (60);
}
///////////////////////////////////////////////////////////////////////////////////////
////Beginning of Draw Loop/////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

void draw () { 

  background(r, g, b);
  stroke(128);
  line(width/2, 0, width/2, height);
  line(0, height/2, width, height/2);

//////////////////////////////////////////////////////////////////////////////
/////Top Left Square//////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

  if (TopLeftClicked == 0) {
    // greenish
    fill(200, 255, 10);
  }else if (TopLeftClicked == 1) {
    // reddish
    fill(200, 0, 120);
  }else if (TopLeftClicked == 2) {
    // yellow
    fill(0, 255, 255);
  }

  rect(TopLeftSqX, TopLeftSqY, width/2, height/2);

/////////////////////////////////////////////////////////////////////////////////////
//Bottom Right Square////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

  if (BottomRightClicked == 0) {
    fill(0, 5, 67);
  } else if (BottomRightClicked == 1){
    fill(255, 0, 0);
  }else if (BottomRightClicked == 2){
    fill(124,34,32);
  }
  rect(BotRightSqX, BotRightSqY, width/2, height/2);

///////////////////////////////////////////////////////////////////////////////////////
//Bottom Left Square///////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

  if (BottomLeftClicked == 0) {
    fill(128);  
  }else if (BottomLeftClicked == 1) {
    fill(34,54,23);
  } else if  (BottomLeftClicked == 2){
    fill(0, 255, 0);
  }
  rect(BotLeftSqX, BotRightSqY, width/2, height/2);

/////////////////////////////////////////////////////////////////////////////////////////
//Top Right Square///////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

  if (TopRightClicked == 0) {
    fill(255);
  }else if  (TopRightClicked == 1){
    fill(10, 10, 200);   
  }else if (TopRightClicked == 2){
    fill(75,0,255);
  }
   rect(TopRightSqX, TopRightSqY, width/2, height/2);
   
/////////////////////////////////////////////////////////////////////////////////////////
//bottom rectangle///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

  if (mouseX < width/3) {
    noStroke ();
    fill (128,0,200);
  }else if (mouseX < 2*width/3) {
    noStroke();
    fill (128,0,200);
  }else {
    noStroke();
    fill (128,0,200); 
  }
  BotRectPosX = mouseX;
   rect (BotRectPosX, BotRectPosY, BotRectW, BotRectH);
   
///////////////////////////////////////////////////////////////////////////////////////
//Ball/////////////////////////////////////////////////////////////////////////////////
/////////// ////////////////////////////////////////////////////////////////////////// 
  
  ballX = ballX + ballXSpeed;
  ballY = ballY + ballYSpeed;

 if ( ballX > BotRectPosX && (ballX < BotRectPosX + (BotRectW) && ( ballY > BotRectPosY -(ballSize/2)))) {
    ballXSpeed = ballXSpeed * -1;
    ballYSpeed = ballYSpeed * -1.0001;
    println (ballY);
  }
 if (ballY > width && ballY < BotRectPosX || ballY  > BotRectPosX + (BotRectW) && ballY  < width) {
    ballYSpeed = ballYSpeed ;
    constrain (ballY, 0, 520);
     minim = new Minim(this);
    loser = minim.loadFile("loser.mp3" , 2048);
    
 }
 if (ballX > width && ballX < BotRectPosX || ballX  > BotRectPosX + (BotRectW) && ballX  < width) {
    ballYSpeed = ballYSpeed ;
    constrain (ballX, 0, 520);
    minim = new Minim(this);
    loser = minim.loadFile("loser.mp3" , 2048);
 }
 if ((ballX > width) || (ballX < 0)) {
    ballXSpeed = ballXSpeed * -1.2;
 } 
 if (ballY < 0) {
    ballYSpeed = ballYSpeed * -1.1;
 }
    
  noStroke();
  fill(255,255,10);
  ellipse(ballX,ballY,ballSize,ballSize);
}
///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

void mousePressed (){
  
  //Top left square
  if (mouseX > 0 && mouseX < width/2 && mouseY > 0  && mouseY < width/2) {
    TopLeftClicked = TopLeftClicked + 1 ;
    minim = new Minim(this);
    Prov = minim.loadFile("niggerslikeyou.mp3" , 2048);
    Prov.loop();
  }
  //Bottom Right Square
  if (mouseX > width/2 && mouseX < width && mouseY > width/2 && mouseY < width ) {
    BottomRightClicked = BottomRightClicked + 1;
    
  } 
  
  //Bottom Left Square
  if (mouseX > 0 && mouseX < width/2 && mouseY > width/2 && mouseY < width ) {
    BottomLeftClicked = BottomLeftClicked + 1;
     minim = new Minim(this);
    ohshit = minim.loadFile("ohshit.mp3" , 2048);
    ohshit.loop();
  } 
  
  //Top Right Square
   if (mouseX > width/2  && mouseX < width  && mouseY > 0 && mouseY < width ) {
     TopRightClicked = TopRightClicked + 1;
      minim = new Minim(this);
    Watchout = minim.loadFile("Watchout.mp3" , 2048);
    Watchout.loop();
  } 
   groove.loop();
 }

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

void stop()
{
  // always close Minim audio classes when you are done with them
  groove.close();
  // always stop Minim before exiting
  minim.stop();
  
  super.stop();
{
    Prov.close();
    minim.stop();
    super.stop();
 }
 {
    Watchout.close();
    minim.stop();
    super.stop();
 }
 {  ohshit.close();
    minim.stop();
    super.stop();
 }
 {
   loser.close();
   minim.stop();
   super.stop();
 }   
}




