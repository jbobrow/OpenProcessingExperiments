
void setup()
{

  size(500,500);
background(255);
smooth();
noStroke();

 
}

void draw()
{

// translate permet de d√©placer une forme sur l'axe des x et celui des y.



translate(250,250);
rotate(PI/11);
  
  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);
    fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);
    fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);
    fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);  fill(111,255,174,10);
 quad(16, 80, 30, 71, 7,66, 19, 4);
  rotate(PI/11);
  
   fill(255,140,111,10);
 quad(16, 80, 30, 71, 7,46, 19, 4);
  rotate(PI/11);
  
   fill(111,255,174,10);
 quad(16, 80, 30, 71, 7, 26, 19, 4);
  rotate(PI/11);
}


