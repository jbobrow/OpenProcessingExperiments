
//John has become a beatnik poet
//Press Left to play the bongos, right to stop playing bongos and mouseclick to generate new poem

//This program emerged from the "analyzing King Lear" example from Learning Processing chapter 18

//importing things for the amazing bongos
import ddf.minim.*;
import ddf.minim.signals.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;

Minim minim;
AudioPlayer bongo;

PFont instructions;

//Arraylist for the automatically generated poems
ArrayList p;

//variables needed to draw John the beatnik
int posX = 400;
int posY = 50;
int personWidth = 40;

//boolean for controlling the amount of poems shown on screen at a time
boolean textIsOn;

//setup! initialising the arraylist and loading the soundfile for the bongos and the font
void setup() {
  size(500,300);
  
  instructions = loadFont("CaviarDreams-18.vlw");
  
  p = new ArrayList();
  
  minim = new Minim(this);
  bongo = minim.loadFile("Bongo.mp3");
  
}


void draw() {
  background(50);
  
  displayInstructions();
  
  //drawing John in his beatnik outfit
  beatnikJohn();
  
  //displaying the poem as they are generated by mouseclick
    for (int i = 0; i < p.size(); i++) {
      Poem poem = (Poem) p.get(i);
      poem.displayPoem();
      
      //removing the poem once the timer is up, as beatnik poems are fleeting objects,
     //disappearing like whispers in the wind
      if (poem.timer()) {
        p.remove(i);
        textIsOn = false;
      }
   }
}

//adding a new poem to the arraylist everytime the mouseclick appears
void mousePressed() {
  if (textIsOn == true) {
  }
  else {
    p.add(new Poem());
    textIsOn = true;
  }
}

//looping (and playing) the bongo when Left key is pressed, and pauses when right is pressed
void keyPressed() {
  if (keyCode == LEFT) {
    bongo.loop();
  }
  if (keyCode == RIGHT) {
    bongo.pause();
  }
}

//This is John as a beatnik, basically just recycled code from earlier assignment with adjustments
void beatnikJohn() {
  
    noStroke();
    
    //the hair
    fill (0);
    rect(posX,posY,personWidth,5*4);
    
    //the face
    fill(255);
    rect(posX,posY+5*4,personWidth,10*4);
    //the sunglasses
    fill(0);
    rect(posX + 5, posY + 7*4, 10,10);
    rect(posX + personWidth - 15, posY + 7*4, 10,10);
    rect(posX + 15, posY + 8*4, 10, 2);
    
    //the body
    fill(150);
    rect(posX,posY+15*4,personWidth,15*4);
    //stripey shirt
    fill(0);
    rect(posX,posY+15*4,personWidth,2*4);
    rect(posX,posY+18*4,personWidth,2*4);
    rect(posX,posY+21*4,personWidth,2*4);
    rect(posX,posY+24*4,personWidth,2*4);
    rect(posX,posY+27*4,personWidth,2*4);
    rect(posX,posY+30*4,personWidth,2*4);
    
    //the legs
    fill(200);
    rect(posX,posY+30*4,personWidth,20*4);
  }
  
  void displayInstructions() {
    textFont(instructions);
    fill(255);
    textAlign(CENTER);
    text("Press LEFT to play the bongos\nRIGHT to stop playing bongos\nmouseclick to generate new poem", width/2,240);
  }
  
  //stopping and closing down the sound
  void stop() {
    bongo.close();
    minim.stop();
    super.stop();
  }

