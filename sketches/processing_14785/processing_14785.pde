
int poum;
int pam;

void setup() {
  poum = 400;
  pam = 8;
  size(poum,poum);
  background(175);
    frameRate(5);
}

void draw() {
  color c1 = color(random(255),random(255),random(255));
  println(frameRate);
    background(175);
     stroke(random(255),random(255),random(255));
         fill(random(255),random(255),random(255));
    rect(pam/4,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam/3,random(295),random(25),295);
   stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam/2,random(295),random(25),295);
  stroke(random(255),random(255),random(255));
    fill(random(255),random(255),random(255));
  rect(pam,random(295),random(25),295);
   stroke(random(255),random(255),random(255));
     fill(random(255),random(255),random(255));
  rect(pam*2,random(295),random(25),295);
   stroke(random(255),random(255),random(255));
     fill(random(255),random(255),random(255));
   rect(pam*3,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
     rect(pam*4,random(295),random(25),295);
       stroke(random(255),random(255),random(255));
         fill(random(255),random(255),random(255));
        rect(pam*5,random(295),random(25),295);
         stroke(random(255),random(255),random(255));
          fill(random(255),random(255),random(255));
        rect(pam*6,random(295),random(25),295);
           stroke(random(255),random(255),random(255));
          fill(random(255),random(255),random(255));
            rect(pam*7,random(295),random(25),295);
             stroke(random(255),random(255),random(255));
             fill(random(255),random(255),random(255));
    rect(pam*8,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
      fill(random(255),random(255),random(255));
   rect(pam*9,random(295),random(25),295);
    stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*10,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
   rect(pam*11,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
      fill(random(255),random(255),random(255));;
    rect(pam*12,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
      fill(random(255),random(255),random(255));
    rect(pam*13,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*14,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
      fill(random(255),random(255),random(255));
    rect(pam*15,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*16,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*17,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
     fill(random(255),random(255),random(255));
    rect(pam*18,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
  fill(random(255),random(255),random(255));
    rect(pam*19,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*20,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*21,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*22,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
      fill(random(255),random(255),random(255));
    rect(pam*23,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*24,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*25,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*26,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*27,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*28,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*29,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*30,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*31,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*32,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
       fill(random(255),random(255),random(255));
    rect(pam*33,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*34,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*35,random(295),random(25),295);
     stroke(random(255),random(255),random(255));
        fill(random(255),random(255),random(255));
    rect(pam*36,random(295),random(25),295);
}               
